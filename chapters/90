<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SicpTextbookRails</title>
    <meta name="csrf-param" content="authenticity_token" />
<meta name="csrf-token" content="RXzOXPK5IGfVp1dsCzFpuZDO/fTh1wxO0dm93EURBRe59p7V7vohf3OMxVif5uNzdiaVot8xaCqQrY1mBBUs+Q==" />

    <!--<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css" integrity="sha384-rwoIResjU2yc3z8GV/NPeZWAv56rSmLldC3R/AZzGRnGxQQKnKkoFVhFQhNUwEyJ" crossorigin="anonymous">
    -->
    <link href="https://fonts.googleapis.com/css?family=Droid+Sans|Droid+Sans+Mono|Droid+Serif" rel="stylesheet">
    <link rel="stylesheet" media="all" href="../assets/application-4afa0dc75ea8a2ff925eb41df709aa5f5fae6640df639d9b6ae50ed06be5a5d2.css" />

    <link rel="shortcut icon" type="image/x-icon" href="../assets/favicon-5cc7f923fb946d60fe9552847f4b6edd0f8cf2f122d6f3fef39d59ce84d47942.ico" />

    <script src="https://code.jquery.com/jquery-3.2.1.min.js"
			  integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="
	          crossorigin="anonymous">
    </script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/tether/1.4.0/js/tether.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js" integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn" crossorigin="anonymous"></script>
    <script type="text/javascript" async
        src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML">
    </script>

    <script src="../assets/application-e1d34c17f2d1680f21b650089aea08e3ecfe292f1157f2d23bfa7d4d9d530c8b.js"></script>

    <!-- Rendering inline LaTeX -->
    <script type="text/x-mathjax-config">
      MathJax.Hub.Config({
        tex2jax: {
          inlineMath: [ ['$','$'], ["\\(","\\)"] ],
          processEscapes: true,
          jax: ["input/TeX","output/HTML-CSS"]
        }
      });
    </script>
    <!--<script src="/mathjax/MathJax.js?config=TeX-AMS_HTML-full.js" type="text/javascript"></script>-->
    <!-- Le HTML5 shim, for IE6-8 support of HTML elements -->
    <!--[if lt IE 9]>
    <script src="//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.2/html5shiv.min.js" type="text/javascript"></script>
    <![endif]-->
  </head>
  <body>

     <nav class="navbar navbar-toggleable-md navbar-inverse bg-inverse fixed-top">
      <button class="navbar-toggler collapsed" type="button" data-toggle="collapse" data-target="#nav-sidebar" aria-controls="nav-sidebar" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
       <a class="navbar-brand navbar-brand-short" href="../chapters">CS1101S: SICP</a>
       <a class="navbar-brand navbar-brand-long" href="../chapters">CS1101S: Structure and Interpretation
          of Computer Programs</a>

       <div class="collapse navbar-collapse" id="navbarsExampleDefault">
         <form id="search" class="form-inline my-2 my-lg-0">
           <input id="search-box" class="form-control mr-sm-2" type="text" placeholder="Search">
           <div id="search-button" class="btn btn-outline-success my-2 my-sm-0">Search</div>

           <script>
               (function() {
                var cx = "002429487986305006822:ztnrbwx01qy";
                var gcse = document.createElement('script');
                gcse.type = 'text/javascript';
                gcse.async = true;
                gcse.src = 'https://cse.google.com/cse.js?cx=' + cx;
                var s = document.getElementsByTagName('script')[0];
                s.parentNode.insertBefore(gcse, s);
               })();
            </script>
            <gcse:search></gcse:search>
         </form>
       </div>
     </nav>

     <div class="container scroll">

          <div class="collapse" id="nav-sidebar" role="tablist" aria-multiselectable="true">
                             <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-122">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-122" aria-expanded="false" aria-controls="sidebar-collapse-122">
                    <a href="122">About</a>
                  </a>
                </h5>
              </div>
            </div>

                             <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-123">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-123" aria-expanded="false" aria-controls="sidebar-collapse-123">
                    <a href="123">References</a>
                  </a>
                </h5>
              </div>
            </div>

                             <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-124">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-124" aria-expanded="false" aria-controls="sidebar-collapse-124">
                    <a href="124">Webpreface</a>
                  </a>
                </h5>
              </div>
            </div>

                             <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-1">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-1" aria-expanded="true" aria-controls="sidebar-collapse-1">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-1" aria-expanded="true" aria-controls="sidebar-collapse-1">
                    -
                  </a>
                    <a href="1">1.       Building Abstractions with       Functions    </a>
                </h5>
              </div>
              <div id="sidebar-collapse-1" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-2">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-1" href="#sidebar-collapse-2" aria-expanded="true" aria-controls="sidebar-collapse-2">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-1" href="#sidebar-collapse-2" aria-expanded="true" aria-controls="sidebar-collapse-2">
                    -
                  </a>
                    <a href="2">1. The Elements of Programming</a>
                </h5>
              </div>
              <div id="sidebar-collapse-2" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-3">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-2" href="#sidebar-collapse-3" aria-expanded="false" aria-controls="sidebar-collapse-3">
                    <a href="3">1. Expressions</a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-4">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-2" href="#sidebar-collapse-4" aria-expanded="false" aria-controls="sidebar-collapse-4">
                    <a href="4">2. Naming and the Environment</a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-5">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-2" href="#sidebar-collapse-5" aria-expanded="false" aria-controls="sidebar-collapse-5">
                    <a href="5">3.           Evaluating          Operator Combinations                  </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-6">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-2" href="#sidebar-collapse-6" aria-expanded="false" aria-controls="sidebar-collapse-6">
                    <a href="6">4.           Functions        </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-7">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-2" href="#sidebar-collapse-7" aria-expanded="false" aria-controls="sidebar-collapse-7">
                    <a href="7">5.           The Substitution Model for                                                 Function                              Application        </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-8">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-2" href="#sidebar-collapse-8" aria-expanded="false" aria-controls="sidebar-collapse-8">
                    <a href="8">6.           Conditional                                           Statements                              and Predicates        </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-9">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-2" href="#sidebar-collapse-9" aria-expanded="false" aria-controls="sidebar-collapse-9">
                    <a href="9">7. Example: Square Roots by Newtons Method</a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-10">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-2" href="#sidebar-collapse-10" aria-expanded="false" aria-controls="sidebar-collapse-10">
                    <a href="10">8.                                                 Functions                                as Black-Box Abstractions        </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-11">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-1" href="#sidebar-collapse-11" aria-expanded="true" aria-controls="sidebar-collapse-11">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-1" href="#sidebar-collapse-11" aria-expanded="true" aria-controls="sidebar-collapse-11">
                    -
                  </a>
                    <a href="11">2.             Functions            and the Processes They Generate      </a>
                </h5>
              </div>
              <div id="sidebar-collapse-11" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-12">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-11" href="#sidebar-collapse-12" aria-expanded="false" aria-controls="sidebar-collapse-12">
                    <a href="12">1. Linear Recursion and Iteration</a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-13">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-11" href="#sidebar-collapse-13" aria-expanded="false" aria-controls="sidebar-collapse-13">
                    <a href="13">2. Tree Recursion</a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-14">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-11" href="#sidebar-collapse-14" aria-expanded="false" aria-controls="sidebar-collapse-14">
                    <a href="14">3. Orders of Growth</a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-15">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-11" href="#sidebar-collapse-15" aria-expanded="false" aria-controls="sidebar-collapse-15">
                    <a href="15">4. Exponentiation</a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-16">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-11" href="#sidebar-collapse-16" aria-expanded="false" aria-controls="sidebar-collapse-16">
                    <a href="16">5. Greatest Common Divisors</a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-17">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-11" href="#sidebar-collapse-17" aria-expanded="false" aria-controls="sidebar-collapse-17">
                    <a href="17">6. Example: Testing for Primality</a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-18">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-1" href="#sidebar-collapse-18" aria-expanded="true" aria-controls="sidebar-collapse-18">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-1" href="#sidebar-collapse-18" aria-expanded="true" aria-controls="sidebar-collapse-18">
                    -
                  </a>
                    <a href="18">3.         Formulating Abstractions with Higher-Order         Functions      </a>
                </h5>
              </div>
              <div id="sidebar-collapse-18" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-19">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-18" href="#sidebar-collapse-19" aria-expanded="false" aria-controls="sidebar-collapse-19">
                    <a href="19">1.           Functions          as Arguments        </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-20">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-18" href="#sidebar-collapse-20" aria-expanded="false" aria-controls="sidebar-collapse-20">
                    <a href="20">2.           Function Definition Expressions          </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-21">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-18" href="#sidebar-collapse-21" aria-expanded="false" aria-controls="sidebar-collapse-21">
                    <a href="21">3.             Functions            as General Methods          </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-22">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-18" href="#sidebar-collapse-22" aria-expanded="false" aria-controls="sidebar-collapse-22">
                    <a href="22">4.               Functions              as Returned Values            </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                             <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-23">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-23" aria-expanded="true" aria-controls="sidebar-collapse-23">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-23" aria-expanded="true" aria-controls="sidebar-collapse-23">
                    -
                  </a>
                    <a href="23">2. Building Abstractions with Data</a>
                </h5>
              </div>
              <div id="sidebar-collapse-23" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-24">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-24" aria-expanded="true" aria-controls="sidebar-collapse-24">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-24" aria-expanded="true" aria-controls="sidebar-collapse-24">
                    -
                  </a>
                    <a href="24">1. Introduction to Data Abstraction</a>
                </h5>
              </div>
              <div id="sidebar-collapse-24" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-25">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-24" href="#sidebar-collapse-25" aria-expanded="false" aria-controls="sidebar-collapse-25">
                    <a href="25">1.         Example: Arithmetic Operations for Rational Numbers      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-26">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-24" href="#sidebar-collapse-26" aria-expanded="false" aria-controls="sidebar-collapse-26">
                    <a href="26">2.         Abstraction Barriers      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-27">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-24" href="#sidebar-collapse-27" aria-expanded="false" aria-controls="sidebar-collapse-27">
                    <a href="27">3.         What Is Meant by Data?      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-28">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-24" href="#sidebar-collapse-28" aria-expanded="false" aria-controls="sidebar-collapse-28">
                    <a href="28">4.         Extended Exercise: Interval Arithmetic      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-29">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-29" aria-expanded="true" aria-controls="sidebar-collapse-29">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-29" aria-expanded="true" aria-controls="sidebar-collapse-29">
                    -
                  </a>
                    <a href="29">2. Hierarchical Data and the Closure Property</a>
                </h5>
              </div>
              <div id="sidebar-collapse-29" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-30">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-29" href="#sidebar-collapse-30" aria-expanded="false" aria-controls="sidebar-collapse-30">
                    <a href="30">1.         Representing Sequences      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-31">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-29" href="#sidebar-collapse-31" aria-expanded="false" aria-controls="sidebar-collapse-31">
                    <a href="31">2.         Hierarchical Structures      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-32">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-29" href="#sidebar-collapse-32" aria-expanded="false" aria-controls="sidebar-collapse-32">
                    <a href="32">3.         Sequences as Conventional Interfaces      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-33">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-29" href="#sidebar-collapse-33" aria-expanded="false" aria-controls="sidebar-collapse-33">
                    <a href="33">4.         Example: A Picture Language      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-34">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-34" aria-expanded="true" aria-controls="sidebar-collapse-34">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-34" aria-expanded="true" aria-controls="sidebar-collapse-34">
                    -
                  </a>
                    <a href="34">3. Symbolic Data</a>
                </h5>
              </div>
              <div id="sidebar-collapse-34" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-35">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-34" href="#sidebar-collapse-35" aria-expanded="false" aria-controls="sidebar-collapse-35">
                    <a href="35">1.         Strings      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-36">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-34" href="#sidebar-collapse-36" aria-expanded="false" aria-controls="sidebar-collapse-36">
                    <a href="36">2.         Example: Symbolic Differentiation      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-37">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-34" href="#sidebar-collapse-37" aria-expanded="false" aria-controls="sidebar-collapse-37">
                    <a href="37">3.         Example: Representing Sets      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-38">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-34" href="#sidebar-collapse-38" aria-expanded="false" aria-controls="sidebar-collapse-38">
                    <a href="38">4.         Example: Huffman Encoding Trees      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-39">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-39" aria-expanded="true" aria-controls="sidebar-collapse-39">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-39" aria-expanded="true" aria-controls="sidebar-collapse-39">
                    -
                  </a>
                    <a href="39">4. Multiple Representations for Abstract Data</a>
                </h5>
              </div>
              <div id="sidebar-collapse-39" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-40">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-39" href="#sidebar-collapse-40" aria-expanded="false" aria-controls="sidebar-collapse-40">
                    <a href="40">1.         Representations for Complex Numbers      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-41">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-39" href="#sidebar-collapse-41" aria-expanded="false" aria-controls="sidebar-collapse-41">
                    <a href="41">2.         Tagged data      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-42">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-39" href="#sidebar-collapse-42" aria-expanded="false" aria-controls="sidebar-collapse-42">
                    <a href="42">3.         Data-Directed Programming and Additivity      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-43">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-43" aria-expanded="true" aria-controls="sidebar-collapse-43">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-43" aria-expanded="true" aria-controls="sidebar-collapse-43">
                    -
                  </a>
                    <a href="43">5. Systems with Generic Operations</a>
                </h5>
              </div>
              <div id="sidebar-collapse-43" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-44">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-43" href="#sidebar-collapse-44" aria-expanded="false" aria-controls="sidebar-collapse-44">
                    <a href="44">1.         Generic Arithmetic Operations      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-45">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-43" href="#sidebar-collapse-45" aria-expanded="false" aria-controls="sidebar-collapse-45">
                    <a href="45">2.         Combining Data of Different Types      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-46">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-43" href="#sidebar-collapse-46" aria-expanded="false" aria-controls="sidebar-collapse-46">
                    <a href="46">3.         Example: Symbolic Algebra      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                             <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-47">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-47" aria-expanded="true" aria-controls="sidebar-collapse-47">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-47" aria-expanded="true" aria-controls="sidebar-collapse-47">
                    -
                  </a>
                    <a href="47">3. Modularity, Objects, and State</a>
                </h5>
              </div>
              <div id="sidebar-collapse-47" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-48">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-48" aria-expanded="true" aria-controls="sidebar-collapse-48">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-48" aria-expanded="true" aria-controls="sidebar-collapse-48">
                    -
                  </a>
                    <a href="48">1. Assignment and Local State</a>
                </h5>
              </div>
              <div id="sidebar-collapse-48" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-49">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-48" href="#sidebar-collapse-49" aria-expanded="false" aria-controls="sidebar-collapse-49">
                    <a href="49">1.         Local State Variables      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-50">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-48" href="#sidebar-collapse-50" aria-expanded="false" aria-controls="sidebar-collapse-50">
                    <a href="50">2.         The Benefits of Introducing Assignment      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-51">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-48" href="#sidebar-collapse-51" aria-expanded="false" aria-controls="sidebar-collapse-51">
                    <a href="51">3.         The Costs of Introducing Assignment      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-52">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-52" aria-expanded="true" aria-controls="sidebar-collapse-52">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-52" aria-expanded="true" aria-controls="sidebar-collapse-52">
                    -
                  </a>
                    <a href="52">2. The Environment Model of Evaluation</a>
                </h5>
              </div>
              <div id="sidebar-collapse-52" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-53">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-52" href="#sidebar-collapse-53" aria-expanded="false" aria-controls="sidebar-collapse-53">
                    <a href="53">1.         The Rules for Evaluation      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-54">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-52" href="#sidebar-collapse-54" aria-expanded="false" aria-controls="sidebar-collapse-54">
                    <a href="54">2.         Applying Simple        Functions      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-55">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-52" href="#sidebar-collapse-55" aria-expanded="false" aria-controls="sidebar-collapse-55">
                    <a href="55">3.         Frames as the Repository of Local State      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-56">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-52" href="#sidebar-collapse-56" aria-expanded="false" aria-controls="sidebar-collapse-56">
                    <a href="56">4.         Internal Definitions      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-57">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-57" aria-expanded="true" aria-controls="sidebar-collapse-57">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-57" aria-expanded="true" aria-controls="sidebar-collapse-57">
                    -
                  </a>
                    <a href="57">3. Modeling with Mutable Data</a>
                </h5>
              </div>
              <div id="sidebar-collapse-57" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-58">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-57" href="#sidebar-collapse-58" aria-expanded="false" aria-controls="sidebar-collapse-58">
                    <a href="58">1.         Mutable List Structure      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-59">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-57" href="#sidebar-collapse-59" aria-expanded="false" aria-controls="sidebar-collapse-59">
                    <a href="59">2.         Representing Queues      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-60">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-57" href="#sidebar-collapse-60" aria-expanded="false" aria-controls="sidebar-collapse-60">
                    <a href="60">3.         Representing Tables      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-61">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-57" href="#sidebar-collapse-61" aria-expanded="false" aria-controls="sidebar-collapse-61">
                    <a href="61">4.         A Simulator for Digital Circuits      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-62">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-57" href="#sidebar-collapse-62" aria-expanded="false" aria-controls="sidebar-collapse-62">
                    <a href="62">5.         Propagation of Constraints      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-63">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-63" aria-expanded="true" aria-controls="sidebar-collapse-63">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-63" aria-expanded="true" aria-controls="sidebar-collapse-63">
                    -
                  </a>
                    <a href="63">4. Concurrency: Time Is of the Essence</a>
                </h5>
              </div>
              <div id="sidebar-collapse-63" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-64">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-63" href="#sidebar-collapse-64" aria-expanded="false" aria-controls="sidebar-collapse-64">
                    <a href="64">1.         The Nature of Time in Concurrent Systems      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-65">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-63" href="#sidebar-collapse-65" aria-expanded="false" aria-controls="sidebar-collapse-65">
                    <a href="65">2.         Mechanisms for Controlling Concurrency      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-66">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-66" aria-expanded="true" aria-controls="sidebar-collapse-66">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-66" aria-expanded="true" aria-controls="sidebar-collapse-66">
                    -
                  </a>
                    <a href="66">5. Streams</a>
                </h5>
              </div>
              <div id="sidebar-collapse-66" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-67">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-66" href="#sidebar-collapse-67" aria-expanded="false" aria-controls="sidebar-collapse-67">
                    <a href="67">1.         Streams Are Delayed Lists      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-68">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-66" href="#sidebar-collapse-68" aria-expanded="false" aria-controls="sidebar-collapse-68">
                    <a href="68">2.         Infinite Streams      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-69">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-66" href="#sidebar-collapse-69" aria-expanded="false" aria-controls="sidebar-collapse-69">
                    <a href="69">3.   Exploiting the Stream Paradigm      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-70">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-66" href="#sidebar-collapse-70" aria-expanded="false" aria-controls="sidebar-collapse-70">
                    <a href="70">4.   Streams and Delayed Evaluation      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-71">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-66" href="#sidebar-collapse-71" aria-expanded="false" aria-controls="sidebar-collapse-71">
                    <a href="71">5.   Modularity of Functional Programs and Modularity of Objects      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                             <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-72">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-72" aria-expanded="true" aria-controls="sidebar-collapse-72">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-72" aria-expanded="true" aria-controls="sidebar-collapse-72">
                    -
                  </a>
                    <a href="72">4. Metalinguistic Abstraction</a>
                </h5>
              </div>
              <div id="sidebar-collapse-72" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-73">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-72" href="#sidebar-collapse-73" aria-expanded="true" aria-controls="sidebar-collapse-73">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-72" href="#sidebar-collapse-73" aria-expanded="true" aria-controls="sidebar-collapse-73">
                    -
                  </a>
                    <a href="73">1. The Metacircular Evaluator</a>
                </h5>
              </div>
              <div id="sidebar-collapse-73" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-74">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-73" href="#sidebar-collapse-74" aria-expanded="false" aria-controls="sidebar-collapse-74">
                    <a href="74">1.   The Core of the Evaluator      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-75">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-73" href="#sidebar-collapse-75" aria-expanded="false" aria-controls="sidebar-collapse-75">
                    <a href="75">2.   Representing Statements and Expressions      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-76">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-73" href="#sidebar-collapse-76" aria-expanded="false" aria-controls="sidebar-collapse-76">
                    <a href="76">3.   Evaluator Data Structures      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-77">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-73" href="#sidebar-collapse-77" aria-expanded="false" aria-controls="sidebar-collapse-77">
                    <a href="77">4.   Running the Evaluator as a Program      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-78">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-73" href="#sidebar-collapse-78" aria-expanded="false" aria-controls="sidebar-collapse-78">
                    <a href="78">5.   Data as Programs      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-79">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-73" href="#sidebar-collapse-79" aria-expanded="false" aria-controls="sidebar-collapse-79">
                    <a href="79">6.   Internal Definitions      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-80">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-73" href="#sidebar-collapse-80" aria-expanded="false" aria-controls="sidebar-collapse-80">
                    <a href="80">7.   Separating Syntactic Analysis from Execution      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-81">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-72" href="#sidebar-collapse-81" aria-expanded="true" aria-controls="sidebar-collapse-81">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-72" href="#sidebar-collapse-81" aria-expanded="true" aria-controls="sidebar-collapse-81">
                    -
                  </a>
                    <a href="81">2. Variations on a SchemeLazy Evaluation</a>
                </h5>
              </div>
              <div id="sidebar-collapse-81" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-82">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-81" href="#sidebar-collapse-82" aria-expanded="false" aria-controls="sidebar-collapse-82">
                    <a href="82">1.   Normal Order and Applicative Order      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-83">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-81" href="#sidebar-collapse-83" aria-expanded="false" aria-controls="sidebar-collapse-83">
                    <a href="83">2.   An Interpreter with Lazy Evaluation      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-84">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-81" href="#sidebar-collapse-84" aria-expanded="false" aria-controls="sidebar-collapse-84">
                    <a href="84">3.   Streams as Lazy Lists      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-85">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-72" href="#sidebar-collapse-85" aria-expanded="true" aria-controls="sidebar-collapse-85">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-72" href="#sidebar-collapse-85" aria-expanded="true" aria-controls="sidebar-collapse-85">
                    -
                  </a>
                    <a href="85">3. Variations on a SchemeNondeterministic Computing</a>
                </h5>
              </div>
              <div id="sidebar-collapse-85" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-86">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-85" href="#sidebar-collapse-86" aria-expanded="false" aria-controls="sidebar-collapse-86">
                    <a href="86">1.   Amb and Search      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-87">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-85" href="#sidebar-collapse-87" aria-expanded="false" aria-controls="sidebar-collapse-87">
                    <a href="87">2.   Examples of Nondeterministic Programs      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-88">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-85" href="#sidebar-collapse-88" aria-expanded="false" aria-controls="sidebar-collapse-88">
                    <a href="88">3.   Implementing the Amb Evaluator      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-89">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-72" href="#sidebar-collapse-89" aria-expanded="true" aria-controls="sidebar-collapse-89">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-72" href="#sidebar-collapse-89" aria-expanded="true" aria-controls="sidebar-collapse-89">
                    -
                  </a>
                    <a href="89">4. Logic Programming</a>
                </h5>
              </div>
              <div id="sidebar-collapse-89" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-90">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-89" href="#sidebar-collapse-90" aria-expanded="false" aria-controls="sidebar-collapse-90">
                    <a href="90">1.   Deductive Information Retrieval      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-91">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-89" href="#sidebar-collapse-91" aria-expanded="false" aria-controls="sidebar-collapse-91">
                    <a href="91">2.   How the Query System Works      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-92">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-89" href="#sidebar-collapse-92" aria-expanded="false" aria-controls="sidebar-collapse-92">
                    <a href="92">3.   Is Logic Programming Mathematical Logic?      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-93">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-89" href="#sidebar-collapse-93" aria-expanded="false" aria-controls="sidebar-collapse-93">
                    <a href="93">4.   Implementing the Query System      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                             <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-94">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-94" aria-expanded="true" aria-controls="sidebar-collapse-94">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-94" aria-expanded="true" aria-controls="sidebar-collapse-94">
                    -
                  </a>
                    <a href="94">5. Computing with Register Machines</a>
                </h5>
              </div>
              <div id="sidebar-collapse-94" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-95">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-95" aria-expanded="true" aria-controls="sidebar-collapse-95">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-95" aria-expanded="true" aria-controls="sidebar-collapse-95">
                    -
                  </a>
                    <a href="95">1. Designing Register Machines</a>
                </h5>
              </div>
              <div id="sidebar-collapse-95" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-96">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-95" href="#sidebar-collapse-96" aria-expanded="false" aria-controls="sidebar-collapse-96">
                    <a href="96">1.   A Language for Describing Register Machines      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-97">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-95" href="#sidebar-collapse-97" aria-expanded="false" aria-controls="sidebar-collapse-97">
                    <a href="97">2.   Abstraction in Machine Design      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-98">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-95" href="#sidebar-collapse-98" aria-expanded="false" aria-controls="sidebar-collapse-98">
                    <a href="98">3.   Subroutines      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-99">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-95" href="#sidebar-collapse-99" aria-expanded="false" aria-controls="sidebar-collapse-99">
                    <a href="99">4.   Using a Stack to Implement Recursion      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-100">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-95" href="#sidebar-collapse-100" aria-expanded="false" aria-controls="sidebar-collapse-100">
                    <a href="100">5.   Instruction Summary      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-101">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-101" aria-expanded="true" aria-controls="sidebar-collapse-101">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-101" aria-expanded="true" aria-controls="sidebar-collapse-101">
                    -
                  </a>
                    <a href="101">2. A Register-Machine Simulator</a>
                </h5>
              </div>
              <div id="sidebar-collapse-101" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-102">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-101" href="#sidebar-collapse-102" aria-expanded="false" aria-controls="sidebar-collapse-102">
                    <a href="102">1.   The Machine Model      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-103">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-101" href="#sidebar-collapse-103" aria-expanded="false" aria-controls="sidebar-collapse-103">
                    <a href="103">2.   The Assembler      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-104">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-101" href="#sidebar-collapse-104" aria-expanded="false" aria-controls="sidebar-collapse-104">
                    <a href="104">3.   Generating Execution  Functions  for Instructions      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-105">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-101" href="#sidebar-collapse-105" aria-expanded="false" aria-controls="sidebar-collapse-105">
                    <a href="105">4.   Monitoring Machine Performance      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-106">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-106" aria-expanded="true" aria-controls="sidebar-collapse-106">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-106" aria-expanded="true" aria-controls="sidebar-collapse-106">
                    -
                  </a>
                    <a href="106">3. Storage Allocation and Garbage Collection</a>
                </h5>
              </div>
              <div id="sidebar-collapse-106" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-107">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-106" href="#sidebar-collapse-107" aria-expanded="false" aria-controls="sidebar-collapse-107">
                    <a href="107">1.   Memory as Vectors      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-108">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-106" href="#sidebar-collapse-108" aria-expanded="false" aria-controls="sidebar-collapse-108">
                    <a href="108">2.   Maintaining the Illusion of Infinite Memory      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-109">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-109" aria-expanded="true" aria-controls="sidebar-collapse-109">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-109" aria-expanded="true" aria-controls="sidebar-collapse-109">
                    -
                  </a>
                    <a href="109">4. The Explicit-Control Evaluator</a>
                </h5>
              </div>
              <div id="sidebar-collapse-109" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-110">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-109" href="#sidebar-collapse-110" aria-expanded="false" aria-controls="sidebar-collapse-110">
                    <a href="110">1.   The Core of the Explicit-Control Evaluator      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-111">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-109" href="#sidebar-collapse-111" aria-expanded="false" aria-controls="sidebar-collapse-111">
                    <a href="111">2.   Sequence Evaluation and Tail Recursion      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-112">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-109" href="#sidebar-collapse-112" aria-expanded="false" aria-controls="sidebar-collapse-112">
                    <a href="112">3.   Conditionals, Assignments, and Definitions      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-113">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-109" href="#sidebar-collapse-113" aria-expanded="false" aria-controls="sidebar-collapse-113">
                    <a href="113">4.   Running the Evaluator      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-114">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-114" aria-expanded="true" aria-controls="sidebar-collapse-114">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-114" aria-expanded="true" aria-controls="sidebar-collapse-114">
                    -
                  </a>
                    <a href="114">5. Compilation</a>
                </h5>
              </div>
              <div id="sidebar-collapse-114" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-115">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-114" href="#sidebar-collapse-115" aria-expanded="false" aria-controls="sidebar-collapse-115">
                    <a href="115">1.   Structure of the Compiler      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-116">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-114" href="#sidebar-collapse-116" aria-expanded="false" aria-controls="sidebar-collapse-116">
                    <a href="116">2.   Compiling Expressions      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-117">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-114" href="#sidebar-collapse-117" aria-expanded="false" aria-controls="sidebar-collapse-117">
                    <a href="117">3.   Compiling Combinations      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-118">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-114" href="#sidebar-collapse-118" aria-expanded="false" aria-controls="sidebar-collapse-118">
                    <a href="118">4.   Combining Instruction Sequences      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-119">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-114" href="#sidebar-collapse-119" aria-expanded="false" aria-controls="sidebar-collapse-119">
                    <a href="119">5.   An Example of Compiled Code      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-120">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-114" href="#sidebar-collapse-120" aria-expanded="false" aria-controls="sidebar-collapse-120">
                    <a href="120">6.   Lexical Addressing      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-121">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-114" href="#sidebar-collapse-121" aria-expanded="false" aria-controls="sidebar-collapse-121">
                    <a href="121">7.   Interfacing Compiled Code to the Evaluator      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

          </div>

           <div class="chapter-content">
    <div class="chapter-title">
        4.4.1.
  Deductive Information Retrieval
      
    </div>
    <div class="chapter-text" >
        <div class="SUBSECTION"><SUBSECTION>
      

      
      

      <p>
  
  Logic programming excels in providing interfaces to data bases for
  information retrieval.  The query language we shall implement in this
  chapter is designed to be used in this way.
      </p>

      <p>
  In order to illustrate what the query system does, we will show how it
  can be used to manage the data base of personnel records for
  
  Microshaft, a thriving high-technology company in the
  Boston area.  The language provides pattern-directed access to
  personnel information and can also take advantage of general rules in
  order to make logical deductions.
      </p>

      <h2>
  A sample data base
      </h2>

      

      <p>
  
  
  The personnel data base for Microshaft
  contains <EM>assertions</EM> about company personnel.  Here is the
  information about Ben Bitdiddle, the resident computer wizard:

  <div class="snippet" id="javascript_90_0_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_0','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
  Each assertion is a list (in this case a triple) whose elements can
  themselves be lists.
      </p>

      <p>
  As resident wizard, Ben is in charge of the company's computer
  division, and he supervises two programmers and one technician.  Here
  is the information about them:

  <div class="snippet" id="javascript_90_1_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_1','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
  There is also a programmer trainee, who is supervised by Alyssa:
  <div class="snippet" id="javascript_90_2_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_2','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
  All of these people are in the computer division, as indicated by the
  word <kbd>computer</kbd> as the first item in their job descriptions.

  Ben is a high-level employee.  His supervisor is the company's big
  wheel himself:

  <div class="snippet" id="javascript_90_3_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_3','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
  Besides the computer division supervised by Ben, the company has an
  accounting division, consisting of a chief accountant and his
  assistant:

  <div class="snippet" id="javascript_90_4_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_4','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
  There is also a secretary for the big wheel:

  <div class="snippet" id="javascript_90_5_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_5','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
  The data base also contains assertions about which kinds of jobs can
  be done by people holding other kinds of jobs.  For instance, a
  computer wizard can do the jobs of both a computer programmer and a
  computer technician:

  <div class="snippet" id="javascript_90_6_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_6','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
  A computer programmer could fill in for a trainee:
  <div class="snippet" id="javascript_90_7_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_7','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
  
  Also, as is well known,
  <div class="snippet" id="javascript_90_8_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_8','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      
      

      <h2>
  Simple queries
      </h2>

      
      <p>
  The query language allows users to retrieve information from the data
  base by posing queries in response to the system's prompt.  For
  example, to find all computer programmers one can say

  <div class="snippet" id="javascript_90_9_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_9','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
  The system will respond with the following items:

  <div class="snippet" id="javascript_90_10_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_10','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
  
  The input query specifies that we are looking for entries in the data
  base that match a certain <EM>pattern</EM>.  In this example, the pattern
  specifies entries consisting of three items, of which the first is the
  literal symbol <kbd>job</kbd>, the second can be anything, and the third is
  the literal list <kbd>???</kbd>.  The <QUOTE>anything</QUOTE> that
  can be the second item in the matching list is specified by a 
  
  <EM>
    pattern variable</EM>, <kbd>?x</kbd>.  The general form of a pattern variable
  is a symbol, taken to be the name of the variable, preceded by a
  question mark.  We will see below why it is useful to specify names
  for pattern variables rather than just putting <kbd>?</kbd> into patterns
  to represent <QUOTE>anything.</QUOTE>  The system responds to a simple query by
  showing all entries in the data base that match the specified pattern.
      </p>

      <p>
  A pattern can have more than one variable.  For example, the query
  <div class="snippet" id="javascript_90_11_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_11','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

  will list all the employees' addresses.
      </p>

      <p>
  A pattern can have no variables, in which case the query simply
  determines whether that pattern is an entry in the data base.  If so,
  there will be one match; if not, there will be no matches.
      </p>

      <p>
  The same pattern variable can appear more than once in a query,
  specifying that the same <QUOTE>anything</QUOTE> must appear in each position.
  This is why variables have names.  For example,

  <div class="snippet" id="javascript_90_12_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_12','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

  finds all people who supervise themselves (though there are no such
  assertions in our sample data base).
      </p>

      <p>
  The query
  <div class="snippet" id="javascript_90_13_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_13','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

  matches all job entries whose third item is a two-element list whose
  first item is <kbd>computer</kbd>:

  <div class="snippet" id="javascript_90_14_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_14','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
  This same pattern does <EM>not</EM> match
  <div class="snippet" id="javascript_90_15_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_15','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
  because the third item in the entry is a list of three elements, and
  the pattern's third item specifies that there should be two elements.
  If we wanted to change the pattern so that the third item could be any
  
  list beginning with <kbd>computer</kbd>, we could 
  specify<a class="superscript" id="footnote-link-1" href="90#footnote-1">[1]</a>

  <div class="snippet" id="javascript_90_16_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_16','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
  For example,
  <div class="snippet" id="javascript_90_17_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_17','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

  matches the data

  <div class="snippet" id="javascript_90_18_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_18','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

  with <kbd>?type</kbd> as the list {<kbd>???</kbd>}.  
  It also matches the data

  <div class="snippet" id="javascript_90_19_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_19','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

  with <kbd>?type</kbd> as the list {<kbd>???</kbd>}, and matches the data

  <div class="snippet" id="javascript_90_20_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_20','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

  with <kbd>?type</kbd> as the empty list {<kbd>???</kbd>}.
  
      </p>

      <p>
  We can describe the query language's processing of simple queries as
  follows:

  <UL>
    <LI>The system finds all assignments to variables in the query
      
      pattern that <EM>satisfy</EM> the pattern—that is, all sets of values
      for the variables such that if the pattern variables are 
      
      <EM>
        instantiated with</EM> (replaced by) the values, the result is in the data
      base.

    </LI>
    <LI>
      The system responds to the query by listing all instantiations of the
      query pattern with the variable assignments that satisfy it.

    </LI>
  </UL>
      </p>

      <p>
  Note that if the pattern has no variables, the query reduces to a
  determination of whether that pattern is in the data base.  If so, the
  empty assignment, which assigns no values to variables, satisfies that
  pattern for that data base.
      </p>

      <EXERCISE>
  Give simple queries that retrieve the following information from the
  data base:
  <OL>
    <LI>
      all people supervised by Ben Bitdiddle;
    </LI>
    <LI>
      the names and jobs of all people in the accounting division;
    </LI>
    <LI>
      the names and addresses of all people who live 
      in Slumerville.
    </LI>
  </OL>
      </EXERCISE>
      

      <h2>
  Compound queries
      </h2>

      

      <p>
  Simple queries form the primitive operations of the query language.
  In order to form compound operations, the query language provides
  means of combination.  One thing that makes the query language a logic
  programming language is that the means of combination mirror the means
  of combination used in forming logical expressions: <kbd>and</kbd>, <kbd>or</kbd>, and <kbd>not</kbd>.  (Here <kbd>and</kbd>, <kbd>or</kbd>, and <kbd>not</kbd> are not
  the JavaScript primitives, but rather operations built into the query
  language.)
      </p>

      <p>
  
  We can use <kbd>and</kbd> as follows to find the addresses of all the
  computer programmers:

  <div class="snippet" id="javascript_90_21_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_21','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
  The resulting output is
  <div class="snippet" id="javascript_90_22_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_22','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
  
  In general,
  <div class="snippet" id="javascript_90_23_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_23','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

  is satisfied by all sets of values for the pattern variables that
  simultaneously satisfy query$_{1}\ldots$query$_{n}$.
      </p>

      <p>
  As for simple queries, the system processes a compound query by
  finding all assignments to the pattern variables that satisfy the
  query, then displaying instantiations of the query with those values.
      </p>

      <p>
  
  Another means of constructing compound queries is through <kbd>or</kbd>.
  For example,

  <div class="snippet" id="javascript_90_24_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_24','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

  
  will find all employees supervised by Ben Bitdiddle or Alyssa P.
  Hacker:

  <div class="snippet" id="javascript_90_25_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_25','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
  In general,
  <div class="snippet" id="javascript_90_26_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_26','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

  is satisfied by all sets of values for the pattern variables that
  satisfy at least one of query$_{1}\ldots$query$_{n}$.
      </p>

      <p>
  
  Compound queries can also be formed with <kbd>not</kbd>. For example,
  <div class="snippet" id="javascript_90_27_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_27','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

  finds all people supervised by Ben Bitdiddle who are not computer
  programmers.  In general,

  <kbd EVAL="no" class="snippet"></kbd>

  is satisfied by all assignments to the pattern variables that do not
  satisfy query$_{1}$.<a class="superscript" id="footnote-link-2" href="90#footnote-2">[2]</a>
      </p>

      <p>
  
  The final combining form is called <kbd>lisp-value</kbd>.  When <kbd>lisp-value</kbd> is the first element of a pattern, it specifies that the
  next element is a JavaScript predicate to be applied to the rest of the
  (instantiated) elements as arguments.  In general,

  <kbd EVAL="no" class="snippet"></kbd>

  will be satisfied by assignments to the pattern variables for which the
  predicate applied to the instantiated
  arg$_{1}\ldots$arg$_{n}$
  is true.  For example, to find all people whose salary is greater than
  <DOLLAR></DOLLAR>30,000 we could write<a class="superscript" id="footnote-link-3" href="90#footnote-3">[3]</a>

  <div class="snippet" id="javascript_90_28_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_28','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
  
      </p>

      <EXERCISE>
  Formulate compound queries that retrieve the following information:
  <OL>
    <LI>
      the names of all people who are supervised by Ben Bitdiddle, together
      with their addresses;
    </LI>
    <LI>
      all people whose salary is less than Ben Bitdiddle's, together with
      their salary and Ben Bitdiddle's salary;
    </LI>
    <LI>
      all people who are supervised by someone who is not in the computer
      division, together with the supervisor's name and job.
    </LI>
  </OL>
      </EXERCISE>
      

      <h2>
  Rules
      </h2>

      
      <p>
  
  In addition to primitive queries and compound queries, the query
  language provides means for abstracting queries.  These are given by
  <EM>rules</EM>.  The rule

  <div class="snippet" id="javascript_90_29_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_29','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

  specifies that two people live near each other if they live in the
  same town.  The final <kbd>not</kbd> clause prevents the rule from saying
  that all people live near themselves.  The <kbd>same</kbd> relation is
  defined by a very simple rule:<a class="superscript" id="footnote-link-4" href="90#footnote-4">[4]</a>

  <div class="snippet" id="javascript_90_30_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_30','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
  The following rule declares that a person is a <QUOTE>wheel</QUOTE> in an
  organization if he supervises someone who is in turn a supervisor:

  <div class="snippet" id="javascript_90_31_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_31','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
  The general form of a rule is
  <div class="snippet" id="javascript_90_32_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_32','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

  where conclusion is a pattern and body is any
  query.<a class="superscript" id="footnote-link-5" href="90#footnote-5">[5]</a> We can think
  of a rule as representing a large (even infinite) set of assertions,
  namely all instantiations of the rule conclusion with variable
  assignments that satisfy the rule body.  When we described simple
  queries (patterns), we said that an assignment to variables satisfies
  a pattern if the instantiated pattern is in the data base.  But the
  pattern needn't be explicitly in the data base as an assertion.  It
  
  can be an implicit assertion implied by a rule.  For example, the
  query
  <div class="snippet" id="javascript_90_33_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_33','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

  results in
  <div class="snippet" id="javascript_90_34_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_34','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
  To find all computer programmers who live near Ben Bitdiddle, we can
  ask
  <div class="snippet" id="javascript_90_35_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_35','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
  
  As in the case of compound
  functions, rules can be used as parts of
  other rules (as we saw with the <kbd>lives-near</kbd> rule above)
  or even be defined recursively.  For instance, the rule
  <div class="snippet" id="javascript_90_36_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_36','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

  says that a staff person is outranked by a boss in the organization if
  the boss is the person's supervisor or (recursively) if the person's
  supervisor is outranked by the boss.
      </p>

      <EXERCISE>
  Define a rule that says that person 1 can replace person 2 if either
  person 1 does the same job as person 2 or someone who does person 1's
  job can also do person 2's job, and if person 1 and person 2 are not
  the same person. Using your rule, give queries that find the
  following:
  <OL>
    <LI>
      all people who can replace Cy D. Fect;
    </LI>
    <LI>
      all people who can replace someone who is being paid more than they
      are, together with the two salaries.
    </LI>
  </OL>
      </EXERCISE>

      <EXERCISE>
  Define a rule that says that a person is a <QUOTE>big shot</QUOTE> in a division
  if the person works in the division but does not have a supervisor who
  works in the division.
      </EXERCISE>

      
      <EXERCISE>
  Ben Bitdiddle has missed one meeting too many.
  Fearing that his habit of forgetting meetings could cost him his
  job, Ben decides to do something about it.  He adds all the weekly
  meetings of the firm to the Microshaft data base by
  asserting the following:
  <div class="snippet" id="javascript_90_37_div"></div>
<div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_37','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

  Each of the above assertions is for a meeting of an entire division.
  Ben also adds an entry for the company-wide meeting that spans all the
  divisions.  All of the company's employees attend this meeting.
  <div class="snippet" id="javascript_90_38_div"></div>
<div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_38','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

  <OL>
    <LI>
      On Friday morning, Ben wants to query the data base for all the meetings
      that occur that day.  What query should he use?
    </LI>
    <LI>
      Alyssa P. Hacker is unimpressed.  She thinks it would be much more
      useful to be able to ask for her meetings by specifying her name.  So
      she designs a rule that says that a person's meetings include all <kbd>whole-company</kbd> meetings plus all meetings of that person's division.
      Fill in the body of Alyssa's rule.
      <kbd EVAL="no" class="snippet"></kbd>
    </LI>
    <LI>
      Alyssa arrives at work on Wednesday morning and wonders what meetings she 
      has to attend that day.  Having defined the above rule,
      what query should she make to find this out?
    </LI>
  </OL>
      </EXERCISE>

      <EXERCISE>
  
  By giving the query
  <div class="snippet" id="javascript_90_39_div"></div>
<div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_39','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

  Alyssa P. Hacker is able to find people who live near her, with whom
  she can ride to work.  On the other hand, when she tries to find all
  pairs of people who live near each other by querying

  <div class="snippet" id="javascript_90_40_div"></div>
<div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_40','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

  she notices that each pair of people who live near each other is
  listed twice; for example,

  <div class="snippet" id="javascript_90_41_div"></div>
<div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_41','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

  Why does this happen?
  Is there a way to find a list of people who live near each other, in
  which each pair appears only once?  Explain.
  
      </EXERCISE>


      <h2>
  Logic as programs
      </h2>

      
      <p>
  We can regard a rule as a kind of logical implication: <EM>If</EM> an
  assignment of values to pattern variables satisfies the body, <EM>
    then</EM> it satisfies the conclusion.  Consequently, we can regard the
  query language as having the ability to perform <EM>logical
    deductions</EM> based upon the rules.  As an example, consider the <kbd>append</kbd> operation described at the beginning of
  Section <REF NAME="sec:logic-programming"></REF>.  As we said, <kbd>append</kbd> can be
  characterized by the following two rules:

  <UL>
    <LI>For any list <kbd>y</kbd>, the empty list and <kbd>y</kbd> <kbd>append</kbd> to form <kbd>y</kbd>.

    </LI>
    <LI>For any <kbd>u</kbd>,$\,$ <kbd>v</kbd>,$\,$ <kbd>y</kbd>, and <kbd>z</kbd>,
      $\,${<kbd>???</kbd>} and <kbd>y</kbd> <kbd>append</kbd> to form {<kbd>???</kbd>}
      if <kbd>v</kbd> and <kbd>y</kbd> <kbd>append</kbd> to form <kbd>z</kbd>.
    </LI>

  </UL>
      </p>

      <p>
  To express this in our query language, we define two rules for a
  relation
  <div class="snippet" id="javascript_90_42_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_42','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

  which we can interpret to mean <QUOTE><kbd>x</kbd> and <kbd>y</kbd> <kbd>append</kbd> to
    form <kbd>z</kbd></QUOTE>:

  <div class="snippet" id="javascript_90_43_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_43','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
  
  The first rule has no body, which means that the conclusion holds for
  any value of <kbd>?y</kbd>.  Note how the second rule makes use of
  
  dotted-tail notation to name the <kbd>head</kbd> and <kbd>tail</kbd> of a list.
      </p>

      <p>
  Given these two rules, we can formulate queries that compute the <kbd>append</kbd> of two lists:
  <div class="snippet" id="javascript_90_44_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_44','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
  What is more striking, we can use the same rules to ask the question
  <QUOTE>Which list, when <kbd>append</kbd>ed to <kbd>???</kbd>, yields <kbd>???</kbd>?</QUOTE>
  This is done as follows:
  <div class="snippet" id="javascript_90_45_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_45','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
  We can also ask for all pairs of lists that <kbd>append</kbd> to form {<kbd>???</kbd>}:
  <div class="snippet" id="javascript_90_46_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_46','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
  The query system may seem to exhibit quite a bit of intelligence in
  using the rules to deduce the answers to the queries above.  Actually,
  as we will see in the next section, the system is following a
  well-determined algorithm in unraveling the rules.  Unfortunately,
  although the system works impressively in the <kbd>append</kbd> case, the
  general methods may break down in more complex cases, as we will see
  in Section <REF NAME="sec:math-logic"></REF>.
      </p>

      
      <EXERCISE>
  The following rules implement a <kbd>next-to</kbd> relation that finds
  adjacent elements of a list:
  <div class="snippet" id="javascript_90_47_div"></div>
<div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_47','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

  What will the response be to the following queries?
  <div class="snippet" id="javascript_90_48_div"></div>
<div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_48','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </EXERCISE>

      <EXERCISE>
  
  Define rules to implement the <kbd>last-pair</kbd> operation of
  Exercise <REF NAME="ex:last"></REF>, which returns a list containing the last
  element of a nonempty list.  Check your rules on queries such as
  <kbd>???</kbd>, <kbd>???</kbd>, and <kbd>???</kbd>.
  Do your rules work correctly on queries such as <kbd>???</kbd>$\,$?
  
      </EXERCISE>

      <EXERCISE>
  
  The following data base (see Genesis 4) traces the genealogy of the
  descendants of Ada back to Adam, by way of Cain:

  <div class="snippet" id="javascript_90_49_div"></div>
<div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('','javascript_90_49','', event,1.0);window.eval('');"></pre>
<a href="http://source-ide-new.surge.sh/?snippet=&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

  Formulate rules such as <QUOTE>If <EM>S</EM> is the son of <EM>F</EM>, and <EM>
      F</EM> is the son of <EM>G</EM>, then <EM>S</EM> is the grandson of <EM>G</EM></QUOTE>
  and <QUOTE>If <EM>W</EM> is the wife of <EM>M</EM>, and <EM>S</EM> is the son of
    <EM>W</EM>, then <EM>S</EM> is the son of <EM>M</EM></QUOTE> (which was supposedly
  more true in biblical times than today) that will enable the query
  system to find the grandson of Cain; the sons of Lamech; the grandsons
  of Methushael.
  (See Exercise <REF NAME="ex:great-grandson"></REF> for some rules to
  deduce more complicated relationships.)
  
      </EXERCISE>
      
      
      

    <hr>
<div class="footnote">
<a class="footnote-number" id="footnote-1" href="90#footnote-link-1">[1] </a><FOOTNOTE>This uses the dotted-tail notation introduced in
    Exercise <REF NAME="ex:dotted-arglist"></REF>.</FOOTNOTE>
</div>
<div class="footnote">
<a class="footnote-number" id="footnote-2" href="90#footnote-link-2">[2] </a><FOOTNOTE>Actually, this description of <kbd>not</kbd> is valid only for simple cases.  The real behavior of <kbd>not</kbd>
    is more complex.  We will examine <kbd>not</kbd>'s peculiarities in
    sections <REF NAME="sec:how-query-works"></REF> and <REF NAME="sec:math-logic"></REF>.</FOOTNOTE>
</div>
<div class="footnote">
<a class="footnote-number" id="footnote-3" href="90#footnote-link-3">[3] </a><FOOTNOTE><kbd>JavaScript-value</kbd> should be used only to perform an operation not
    
    provided in the query language.  In particular, it should not
    be used to test equality (since that is what the matching in the
    query language is designed to do) or inequality (since that can
    be done with the <kbd>same</kbd> rule shown below).</FOOTNOTE>
</div>
<div class="footnote">
<a class="footnote-number" id="footnote-4" href="90#footnote-link-4">[4] </a><FOOTNOTE>Notice 
    that we do not need <kbd>same</kbd> in order to make two things be
    the same: We just use the same pattern variable for each—in effect,
    we have one thing instead of two things in the first place.  For
    example, see <kbd>?town</kbd> in the <kbd>lives-near</kbd> rule and <kbd>?middle-manager</kbd> in the <kbd>wheel</kbd> rule below.
    <kbd>Same</kbd> is useful when we want to force two things to be
    different, such as <kbd>?person-1</kbd> and <kbd>?person-2</kbd> in the <kbd>lives-near</kbd> rule.  Although using the same pattern variable in two
    parts of a query forces the same value to appear in both places, using
    different pattern variables does not force different values to appear.
    (The values assigned to different pattern variables may be the same or
    different.)</FOOTNOTE>
</div>
<div class="footnote">
<a class="footnote-number" id="footnote-5" href="90#footnote-link-5">[5] </a><FOOTNOTE>We will also allow rules without bodies, as in <kbd>
      same</kbd>, and we will interpret such a rule to mean that the rule
    conclusion is satisfied by any values of the variables.</FOOTNOTE>
</div></SUBSECTION></div>
    </div>

    <div class="nav">
    <!--
      <div type="button" class="btn btn-secondary">
        <a href="http://localhost:3000/chapters/89">&lt; Previous</a>
    </div>
    -->
      <div type="button" class="btn btn-secondary">
        <a class="scroll-next" href="91">Next &gt;</a>
      </div>


  </div>
  <script>
//<![CDATA[
var chapter_id = 90;
//]]>
</script>
  <div class="next-page"></div>
</div>

     </div><!-- /.container -->

     <!--<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js" integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn" crossorigin="anonymous"></script>
     -->
   </body>
</html>
