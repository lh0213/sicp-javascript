<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SicpTextbookRails</title>
    <meta name="csrf-param" content="authenticity_token" />
<meta name="csrf-token" content="EzQ6QEmeLUWCwdY/t9EvWWeLtfEOeJM1UQk7emUaZI3vvmrJVd0sXSTqRAsjBqWTgWPdpzCe91EQfQvAJB5NYw==" />

    <!--<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css" integrity="sha384-rwoIResjU2yc3z8GV/NPeZWAv56rSmLldC3R/AZzGRnGxQQKnKkoFVhFQhNUwEyJ" crossorigin="anonymous">
    -->
    <link href="https://fonts.googleapis.com/css?family=Droid+Sans|Droid+Sans+Mono|Droid+Serif" rel="stylesheet">
    <link rel="stylesheet" media="all" href="../assets/application-4afa0dc75ea8a2ff925eb41df709aa5f5fae6640df639d9b6ae50ed06be5a5d2.css" />

    <link rel="shortcut icon" type="image/x-icon" href="../assets/favicon-5cc7f923fb946d60fe9552847f4b6edd0f8cf2f122d6f3fef39d59ce84d47942.ico" />

    <script src="https://code.jquery.com/jquery-3.2.1.min.js"
			  integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="
	          crossorigin="anonymous">
    </script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/tether/1.4.0/js/tether.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js" integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn" crossorigin="anonymous"></script>
    <script type="text/javascript" async
        src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML">
    </script>

    <script src="../assets/application-e1d34c17f2d1680f21b650089aea08e3ecfe292f1157f2d23bfa7d4d9d530c8b.js"></script>

    <!-- Rendering inline LaTeX -->
    <script type="text/x-mathjax-config">
      MathJax.Hub.Config({
        tex2jax: {
          inlineMath: [ ['$','$'], ["\\(","\\)"] ],
          processEscapes: true,
          jax: ["input/TeX","output/HTML-CSS"]
        }
      });
    </script>
    <!--<script src="/mathjax/MathJax.js?config=TeX-AMS_HTML-full.js" type="text/javascript"></script>-->
    <!-- Le HTML5 shim, for IE6-8 support of HTML elements -->
    <!--[if lt IE 9]>
    <script src="//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.2/html5shiv.min.js" type="text/javascript"></script>
    <![endif]-->
  </head>
  <body>

     <nav class="navbar navbar-toggleable-md navbar-inverse bg-inverse fixed-top">
      <button class="navbar-toggler collapsed" type="button" data-toggle="collapse" data-target="#nav-sidebar" aria-controls="nav-sidebar" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
       <a class="navbar-brand navbar-brand-short" href="../chapters">CS1101S: SICP</a>
       <a class="navbar-brand navbar-brand-long" href="../chapters">CS1101S: Structure and Interpretation
          of Computer Programs</a>

       <div class="collapse navbar-collapse" id="navbarsExampleDefault">
         <form id="search" class="form-inline my-2 my-lg-0">
           <input id="search-box" class="form-control mr-sm-2" type="text" placeholder="Search">
           <div id="search-button" class="btn btn-outline-success my-2 my-sm-0">Search</div>

           <script>
               (function() {
                var cx = "002429487986305006822:ztnrbwx01qy";
                var gcse = document.createElement('script');
                gcse.type = 'text/javascript';
                gcse.async = true;
                gcse.src = 'https://cse.google.com/cse.js?cx=' + cx;
                var s = document.getElementsByTagName('script')[0];
                s.parentNode.insertBefore(gcse, s);
               })();
            </script>
            <gcse:search></gcse:search>
         </form>
       </div>
     </nav>

     <div class="container scroll">

          <div class="collapse" id="nav-sidebar" role="tablist" aria-multiselectable="true">
                             <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-122">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-122" aria-expanded="false" aria-controls="sidebar-collapse-122">
                    <a href="122">About</a>
                  </a>
                </h5>
              </div>
            </div>

                             <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-123">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-123" aria-expanded="false" aria-controls="sidebar-collapse-123">
                    <a href="123">References</a>
                  </a>
                </h5>
              </div>
            </div>

                             <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-124">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-124" aria-expanded="false" aria-controls="sidebar-collapse-124">
                    <a href="124">Webpreface</a>
                  </a>
                </h5>
              </div>
            </div>

                             <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-1">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-1" aria-expanded="true" aria-controls="sidebar-collapse-1">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-1" aria-expanded="true" aria-controls="sidebar-collapse-1">
                    -
                  </a>
                    <a href="1">1.       Building Abstractions with       Functions    </a>
                </h5>
              </div>
              <div id="sidebar-collapse-1" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-2">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-1" href="#sidebar-collapse-2" aria-expanded="true" aria-controls="sidebar-collapse-2">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-1" href="#sidebar-collapse-2" aria-expanded="true" aria-controls="sidebar-collapse-2">
                    -
                  </a>
                    <a href="2">1. The Elements of Programming</a>
                </h5>
              </div>
              <div id="sidebar-collapse-2" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-3">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-2" href="#sidebar-collapse-3" aria-expanded="false" aria-controls="sidebar-collapse-3">
                    <a href="3">1. Expressions</a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-4">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-2" href="#sidebar-collapse-4" aria-expanded="false" aria-controls="sidebar-collapse-4">
                    <a href="4">2. Naming and the Environment</a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-5">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-2" href="#sidebar-collapse-5" aria-expanded="false" aria-controls="sidebar-collapse-5">
                    <a href="5">3.           Evaluating          Operator Combinations                  </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-6">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-2" href="#sidebar-collapse-6" aria-expanded="false" aria-controls="sidebar-collapse-6">
                    <a href="6">4.           Functions        </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-7">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-2" href="#sidebar-collapse-7" aria-expanded="false" aria-controls="sidebar-collapse-7">
                    <a href="7">5.           The Substitution Model for                                                 Function                              Application        </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-8">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-2" href="#sidebar-collapse-8" aria-expanded="false" aria-controls="sidebar-collapse-8">
                    <a href="8">6.           Conditional                                           Statements                              and Predicates        </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-9">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-2" href="#sidebar-collapse-9" aria-expanded="false" aria-controls="sidebar-collapse-9">
                    <a href="9">7. Example: Square Roots by Newtons Method</a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-10">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-2" href="#sidebar-collapse-10" aria-expanded="false" aria-controls="sidebar-collapse-10">
                    <a href="10">8.                                                 Functions                                as Black-Box Abstractions        </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-11">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-1" href="#sidebar-collapse-11" aria-expanded="true" aria-controls="sidebar-collapse-11">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-1" href="#sidebar-collapse-11" aria-expanded="true" aria-controls="sidebar-collapse-11">
                    -
                  </a>
                    <a href="11">2.             Functions            and the Processes They Generate      </a>
                </h5>
              </div>
              <div id="sidebar-collapse-11" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-12">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-11" href="#sidebar-collapse-12" aria-expanded="false" aria-controls="sidebar-collapse-12">
                    <a href="12">1. Linear Recursion and Iteration</a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-13">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-11" href="#sidebar-collapse-13" aria-expanded="false" aria-controls="sidebar-collapse-13">
                    <a href="13">2. Tree Recursion</a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-14">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-11" href="#sidebar-collapse-14" aria-expanded="false" aria-controls="sidebar-collapse-14">
                    <a href="14">3. Orders of Growth</a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-15">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-11" href="#sidebar-collapse-15" aria-expanded="false" aria-controls="sidebar-collapse-15">
                    <a href="15">4. Exponentiation</a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-16">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-11" href="#sidebar-collapse-16" aria-expanded="false" aria-controls="sidebar-collapse-16">
                    <a href="16">5. Greatest Common Divisors</a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-17">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-11" href="#sidebar-collapse-17" aria-expanded="false" aria-controls="sidebar-collapse-17">
                    <a href="17">6. Example: Testing for Primality</a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-18">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-1" href="#sidebar-collapse-18" aria-expanded="true" aria-controls="sidebar-collapse-18">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-1" href="#sidebar-collapse-18" aria-expanded="true" aria-controls="sidebar-collapse-18">
                    -
                  </a>
                    <a href="18">3.         Formulating Abstractions with Higher-Order         Functions      </a>
                </h5>
              </div>
              <div id="sidebar-collapse-18" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-19">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-18" href="#sidebar-collapse-19" aria-expanded="false" aria-controls="sidebar-collapse-19">
                    <a href="19">1.           Functions          as Arguments        </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-20">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-18" href="#sidebar-collapse-20" aria-expanded="false" aria-controls="sidebar-collapse-20">
                    <a href="20">2.           Function Definition Expressions          </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-21">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-18" href="#sidebar-collapse-21" aria-expanded="false" aria-controls="sidebar-collapse-21">
                    <a href="21">3.             Functions            as General Methods          </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-22">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-18" href="#sidebar-collapse-22" aria-expanded="false" aria-controls="sidebar-collapse-22">
                    <a href="22">4.               Functions              as Returned Values            </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                             <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-23">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-23" aria-expanded="true" aria-controls="sidebar-collapse-23">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-23" aria-expanded="true" aria-controls="sidebar-collapse-23">
                    -
                  </a>
                    <a href="23">2. Building Abstractions with Data</a>
                </h5>
              </div>
              <div id="sidebar-collapse-23" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-24">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-24" aria-expanded="true" aria-controls="sidebar-collapse-24">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-24" aria-expanded="true" aria-controls="sidebar-collapse-24">
                    -
                  </a>
                    <a href="24">1. Introduction to Data Abstraction</a>
                </h5>
              </div>
              <div id="sidebar-collapse-24" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-25">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-24" href="#sidebar-collapse-25" aria-expanded="false" aria-controls="sidebar-collapse-25">
                    <a href="25">1.         Example: Arithmetic Operations for Rational Numbers      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-26">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-24" href="#sidebar-collapse-26" aria-expanded="false" aria-controls="sidebar-collapse-26">
                    <a href="26">2.         Abstraction Barriers      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-27">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-24" href="#sidebar-collapse-27" aria-expanded="false" aria-controls="sidebar-collapse-27">
                    <a href="27">3.         What Is Meant by Data?      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-28">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-24" href="#sidebar-collapse-28" aria-expanded="false" aria-controls="sidebar-collapse-28">
                    <a href="28">4.         Extended Exercise: Interval Arithmetic      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-29">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-29" aria-expanded="true" aria-controls="sidebar-collapse-29">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-29" aria-expanded="true" aria-controls="sidebar-collapse-29">
                    -
                  </a>
                    <a href="29">2. Hierarchical Data and the Closure Property</a>
                </h5>
              </div>
              <div id="sidebar-collapse-29" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-30">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-29" href="#sidebar-collapse-30" aria-expanded="false" aria-controls="sidebar-collapse-30">
                    <a href="30">1.         Representing Sequences      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-31">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-29" href="#sidebar-collapse-31" aria-expanded="false" aria-controls="sidebar-collapse-31">
                    <a href="31">2.         Hierarchical Structures      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-32">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-29" href="#sidebar-collapse-32" aria-expanded="false" aria-controls="sidebar-collapse-32">
                    <a href="32">3.         Sequences as Conventional Interfaces      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-33">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-29" href="#sidebar-collapse-33" aria-expanded="false" aria-controls="sidebar-collapse-33">
                    <a href="33">4.         Example: A Picture Language      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-34">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-34" aria-expanded="true" aria-controls="sidebar-collapse-34">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-34" aria-expanded="true" aria-controls="sidebar-collapse-34">
                    -
                  </a>
                    <a href="34">3. Symbolic Data</a>
                </h5>
              </div>
              <div id="sidebar-collapse-34" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-35">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-34" href="#sidebar-collapse-35" aria-expanded="false" aria-controls="sidebar-collapse-35">
                    <a href="35">1.         Strings      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-36">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-34" href="#sidebar-collapse-36" aria-expanded="false" aria-controls="sidebar-collapse-36">
                    <a href="36">2.         Example: Symbolic Differentiation      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-37">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-34" href="#sidebar-collapse-37" aria-expanded="false" aria-controls="sidebar-collapse-37">
                    <a href="37">3.         Example: Representing Sets      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-38">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-34" href="#sidebar-collapse-38" aria-expanded="false" aria-controls="sidebar-collapse-38">
                    <a href="38">4.         Example: Huffman Encoding Trees      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-39">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-39" aria-expanded="true" aria-controls="sidebar-collapse-39">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-39" aria-expanded="true" aria-controls="sidebar-collapse-39">
                    -
                  </a>
                    <a href="39">4. Multiple Representations for Abstract Data</a>
                </h5>
              </div>
              <div id="sidebar-collapse-39" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-40">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-39" href="#sidebar-collapse-40" aria-expanded="false" aria-controls="sidebar-collapse-40">
                    <a href="40">1.         Representations for Complex Numbers      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-41">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-39" href="#sidebar-collapse-41" aria-expanded="false" aria-controls="sidebar-collapse-41">
                    <a href="41">2.         Tagged data      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-42">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-39" href="#sidebar-collapse-42" aria-expanded="false" aria-controls="sidebar-collapse-42">
                    <a href="42">3.         Data-Directed Programming and Additivity      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-43">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-43" aria-expanded="true" aria-controls="sidebar-collapse-43">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-43" aria-expanded="true" aria-controls="sidebar-collapse-43">
                    -
                  </a>
                    <a href="43">5. Systems with Generic Operations</a>
                </h5>
              </div>
              <div id="sidebar-collapse-43" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-44">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-43" href="#sidebar-collapse-44" aria-expanded="false" aria-controls="sidebar-collapse-44">
                    <a href="44">1.         Generic Arithmetic Operations      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-45">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-43" href="#sidebar-collapse-45" aria-expanded="false" aria-controls="sidebar-collapse-45">
                    <a href="45">2.         Combining Data of Different Types      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-46">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-43" href="#sidebar-collapse-46" aria-expanded="false" aria-controls="sidebar-collapse-46">
                    <a href="46">3.         Example: Symbolic Algebra      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                             <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-47">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-47" aria-expanded="true" aria-controls="sidebar-collapse-47">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-47" aria-expanded="true" aria-controls="sidebar-collapse-47">
                    -
                  </a>
                    <a href="47">3. Modularity, Objects, and State</a>
                </h5>
              </div>
              <div id="sidebar-collapse-47" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-48">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-48" aria-expanded="true" aria-controls="sidebar-collapse-48">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-48" aria-expanded="true" aria-controls="sidebar-collapse-48">
                    -
                  </a>
                    <a href="48">1. Assignment and Local State</a>
                </h5>
              </div>
              <div id="sidebar-collapse-48" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-49">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-48" href="#sidebar-collapse-49" aria-expanded="false" aria-controls="sidebar-collapse-49">
                    <a href="49">1.         Local State Variables      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-50">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-48" href="#sidebar-collapse-50" aria-expanded="false" aria-controls="sidebar-collapse-50">
                    <a href="50">2.         The Benefits of Introducing Assignment      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-51">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-48" href="#sidebar-collapse-51" aria-expanded="false" aria-controls="sidebar-collapse-51">
                    <a href="51">3.         The Costs of Introducing Assignment      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-52">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-52" aria-expanded="true" aria-controls="sidebar-collapse-52">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-52" aria-expanded="true" aria-controls="sidebar-collapse-52">
                    -
                  </a>
                    <a href="52">2. The Environment Model of Evaluation</a>
                </h5>
              </div>
              <div id="sidebar-collapse-52" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-53">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-52" href="#sidebar-collapse-53" aria-expanded="false" aria-controls="sidebar-collapse-53">
                    <a href="53">1.         The Rules for Evaluation      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-54">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-52" href="#sidebar-collapse-54" aria-expanded="false" aria-controls="sidebar-collapse-54">
                    <a href="54">2.         Applying Simple        Functions      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-55">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-52" href="#sidebar-collapse-55" aria-expanded="false" aria-controls="sidebar-collapse-55">
                    <a href="55">3.         Frames as the Repository of Local State      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-56">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-52" href="#sidebar-collapse-56" aria-expanded="false" aria-controls="sidebar-collapse-56">
                    <a href="56">4.         Internal Definitions      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-57">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-57" aria-expanded="true" aria-controls="sidebar-collapse-57">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-57" aria-expanded="true" aria-controls="sidebar-collapse-57">
                    -
                  </a>
                    <a href="57">3. Modeling with Mutable Data</a>
                </h5>
              </div>
              <div id="sidebar-collapse-57" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-58">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-57" href="#sidebar-collapse-58" aria-expanded="false" aria-controls="sidebar-collapse-58">
                    <a href="58">1.         Mutable List Structure      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-59">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-57" href="#sidebar-collapse-59" aria-expanded="false" aria-controls="sidebar-collapse-59">
                    <a href="59">2.         Representing Queues      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-60">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-57" href="#sidebar-collapse-60" aria-expanded="false" aria-controls="sidebar-collapse-60">
                    <a href="60">3.         Representing Tables      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-61">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-57" href="#sidebar-collapse-61" aria-expanded="false" aria-controls="sidebar-collapse-61">
                    <a href="61">4.         A Simulator for Digital Circuits      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-62">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-57" href="#sidebar-collapse-62" aria-expanded="false" aria-controls="sidebar-collapse-62">
                    <a href="62">5.         Propagation of Constraints      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-63">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-63" aria-expanded="true" aria-controls="sidebar-collapse-63">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-63" aria-expanded="true" aria-controls="sidebar-collapse-63">
                    -
                  </a>
                    <a href="63">4. Concurrency: Time Is of the Essence</a>
                </h5>
              </div>
              <div id="sidebar-collapse-63" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-64">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-63" href="#sidebar-collapse-64" aria-expanded="false" aria-controls="sidebar-collapse-64">
                    <a href="64">1.         The Nature of Time in Concurrent Systems      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-65">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-63" href="#sidebar-collapse-65" aria-expanded="false" aria-controls="sidebar-collapse-65">
                    <a href="65">2.         Mechanisms for Controlling Concurrency      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-66">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-66" aria-expanded="true" aria-controls="sidebar-collapse-66">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-66" aria-expanded="true" aria-controls="sidebar-collapse-66">
                    -
                  </a>
                    <a href="66">5. Streams</a>
                </h5>
              </div>
              <div id="sidebar-collapse-66" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-67">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-66" href="#sidebar-collapse-67" aria-expanded="false" aria-controls="sidebar-collapse-67">
                    <a href="67">1.         Streams Are Delayed Lists      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-68">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-66" href="#sidebar-collapse-68" aria-expanded="false" aria-controls="sidebar-collapse-68">
                    <a href="68">2.         Infinite Streams      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-69">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-66" href="#sidebar-collapse-69" aria-expanded="false" aria-controls="sidebar-collapse-69">
                    <a href="69">3.   Exploiting the Stream Paradigm      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-70">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-66" href="#sidebar-collapse-70" aria-expanded="false" aria-controls="sidebar-collapse-70">
                    <a href="70">4.   Streams and Delayed Evaluation      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-71">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-66" href="#sidebar-collapse-71" aria-expanded="false" aria-controls="sidebar-collapse-71">
                    <a href="71">5.   Modularity of Functional Programs and Modularity of Objects      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                             <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-72">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-72" aria-expanded="true" aria-controls="sidebar-collapse-72">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-72" aria-expanded="true" aria-controls="sidebar-collapse-72">
                    -
                  </a>
                    <a href="72">4. Metalinguistic Abstraction</a>
                </h5>
              </div>
              <div id="sidebar-collapse-72" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-73">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-72" href="#sidebar-collapse-73" aria-expanded="true" aria-controls="sidebar-collapse-73">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-72" href="#sidebar-collapse-73" aria-expanded="true" aria-controls="sidebar-collapse-73">
                    -
                  </a>
                    <a href="73">1. The Metacircular Evaluator</a>
                </h5>
              </div>
              <div id="sidebar-collapse-73" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-74">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-73" href="#sidebar-collapse-74" aria-expanded="false" aria-controls="sidebar-collapse-74">
                    <a href="74">1.   The Core of the Evaluator      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-75">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-73" href="#sidebar-collapse-75" aria-expanded="false" aria-controls="sidebar-collapse-75">
                    <a href="75">2.   Representing Statements and Expressions      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-76">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-73" href="#sidebar-collapse-76" aria-expanded="false" aria-controls="sidebar-collapse-76">
                    <a href="76">3.   Evaluator Data Structures      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-77">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-73" href="#sidebar-collapse-77" aria-expanded="false" aria-controls="sidebar-collapse-77">
                    <a href="77">4.   Running the Evaluator as a Program      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-78">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-73" href="#sidebar-collapse-78" aria-expanded="false" aria-controls="sidebar-collapse-78">
                    <a href="78">5.   Data as Programs      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-79">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-73" href="#sidebar-collapse-79" aria-expanded="false" aria-controls="sidebar-collapse-79">
                    <a href="79">6.   Internal Definitions      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-80">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-73" href="#sidebar-collapse-80" aria-expanded="false" aria-controls="sidebar-collapse-80">
                    <a href="80">7.   Separating Syntactic Analysis from Execution      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-81">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-72" href="#sidebar-collapse-81" aria-expanded="true" aria-controls="sidebar-collapse-81">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-72" href="#sidebar-collapse-81" aria-expanded="true" aria-controls="sidebar-collapse-81">
                    -
                  </a>
                    <a href="81">2. Variations on a SchemeLazy Evaluation</a>
                </h5>
              </div>
              <div id="sidebar-collapse-81" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-82">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-81" href="#sidebar-collapse-82" aria-expanded="false" aria-controls="sidebar-collapse-82">
                    <a href="82">1.   Normal Order and Applicative Order      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-83">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-81" href="#sidebar-collapse-83" aria-expanded="false" aria-controls="sidebar-collapse-83">
                    <a href="83">2.   An Interpreter with Lazy Evaluation      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-84">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-81" href="#sidebar-collapse-84" aria-expanded="false" aria-controls="sidebar-collapse-84">
                    <a href="84">3.   Streams as Lazy Lists      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-85">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-72" href="#sidebar-collapse-85" aria-expanded="true" aria-controls="sidebar-collapse-85">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-72" href="#sidebar-collapse-85" aria-expanded="true" aria-controls="sidebar-collapse-85">
                    -
                  </a>
                    <a href="85">3. Variations on a SchemeNondeterministic Computing</a>
                </h5>
              </div>
              <div id="sidebar-collapse-85" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-86">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-85" href="#sidebar-collapse-86" aria-expanded="false" aria-controls="sidebar-collapse-86">
                    <a href="86">1.   Amb and Search      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-87">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-85" href="#sidebar-collapse-87" aria-expanded="false" aria-controls="sidebar-collapse-87">
                    <a href="87">2.   Examples of Nondeterministic Programs      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-88">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-85" href="#sidebar-collapse-88" aria-expanded="false" aria-controls="sidebar-collapse-88">
                    <a href="88">3.   Implementing the Amb Evaluator      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-89">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-72" href="#sidebar-collapse-89" aria-expanded="true" aria-controls="sidebar-collapse-89">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-72" href="#sidebar-collapse-89" aria-expanded="true" aria-controls="sidebar-collapse-89">
                    -
                  </a>
                    <a href="89">4. Logic Programming</a>
                </h5>
              </div>
              <div id="sidebar-collapse-89" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-90">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-89" href="#sidebar-collapse-90" aria-expanded="false" aria-controls="sidebar-collapse-90">
                    <a href="90">1.   Deductive Information Retrieval      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-91">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-89" href="#sidebar-collapse-91" aria-expanded="false" aria-controls="sidebar-collapse-91">
                    <a href="91">2.   How the Query System Works      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-92">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-89" href="#sidebar-collapse-92" aria-expanded="false" aria-controls="sidebar-collapse-92">
                    <a href="92">3.   Is Logic Programming Mathematical Logic?      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-93">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-89" href="#sidebar-collapse-93" aria-expanded="false" aria-controls="sidebar-collapse-93">
                    <a href="93">4.   Implementing the Query System      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                             <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-94">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-94" aria-expanded="true" aria-controls="sidebar-collapse-94">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-94" aria-expanded="true" aria-controls="sidebar-collapse-94">
                    -
                  </a>
                    <a href="94">5. Computing with Register Machines</a>
                </h5>
              </div>
              <div id="sidebar-collapse-94" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-95">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-95" aria-expanded="true" aria-controls="sidebar-collapse-95">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-95" aria-expanded="true" aria-controls="sidebar-collapse-95">
                    -
                  </a>
                    <a href="95">1. Designing Register Machines</a>
                </h5>
              </div>
              <div id="sidebar-collapse-95" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-96">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-95" href="#sidebar-collapse-96" aria-expanded="false" aria-controls="sidebar-collapse-96">
                    <a href="96">1.   A Language for Describing Register Machines      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-97">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-95" href="#sidebar-collapse-97" aria-expanded="false" aria-controls="sidebar-collapse-97">
                    <a href="97">2.   Abstraction in Machine Design      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-98">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-95" href="#sidebar-collapse-98" aria-expanded="false" aria-controls="sidebar-collapse-98">
                    <a href="98">3.   Subroutines      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-99">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-95" href="#sidebar-collapse-99" aria-expanded="false" aria-controls="sidebar-collapse-99">
                    <a href="99">4.   Using a Stack to Implement Recursion      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-100">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-95" href="#sidebar-collapse-100" aria-expanded="false" aria-controls="sidebar-collapse-100">
                    <a href="100">5.   Instruction Summary      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-101">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-101" aria-expanded="true" aria-controls="sidebar-collapse-101">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-101" aria-expanded="true" aria-controls="sidebar-collapse-101">
                    -
                  </a>
                    <a href="101">2. A Register-Machine Simulator</a>
                </h5>
              </div>
              <div id="sidebar-collapse-101" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-102">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-101" href="#sidebar-collapse-102" aria-expanded="false" aria-controls="sidebar-collapse-102">
                    <a href="102">1.   The Machine Model      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-103">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-101" href="#sidebar-collapse-103" aria-expanded="false" aria-controls="sidebar-collapse-103">
                    <a href="103">2.   The Assembler      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-104">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-101" href="#sidebar-collapse-104" aria-expanded="false" aria-controls="sidebar-collapse-104">
                    <a href="104">3.   Generating Execution  Functions  for Instructions      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-105">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-101" href="#sidebar-collapse-105" aria-expanded="false" aria-controls="sidebar-collapse-105">
                    <a href="105">4.   Monitoring Machine Performance      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-106">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-106" aria-expanded="true" aria-controls="sidebar-collapse-106">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-106" aria-expanded="true" aria-controls="sidebar-collapse-106">
                    -
                  </a>
                    <a href="106">3. Storage Allocation and Garbage Collection</a>
                </h5>
              </div>
              <div id="sidebar-collapse-106" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-107">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-106" href="#sidebar-collapse-107" aria-expanded="false" aria-controls="sidebar-collapse-107">
                    <a href="107">1.   Memory as Vectors      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-108">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-106" href="#sidebar-collapse-108" aria-expanded="false" aria-controls="sidebar-collapse-108">
                    <a href="108">2.   Maintaining the Illusion of Infinite Memory      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-109">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-109" aria-expanded="true" aria-controls="sidebar-collapse-109">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-109" aria-expanded="true" aria-controls="sidebar-collapse-109">
                    -
                  </a>
                    <a href="109">4. The Explicit-Control Evaluator</a>
                </h5>
              </div>
              <div id="sidebar-collapse-109" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-110">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-109" href="#sidebar-collapse-110" aria-expanded="false" aria-controls="sidebar-collapse-110">
                    <a href="110">1.   The Core of the Explicit-Control Evaluator      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-111">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-109" href="#sidebar-collapse-111" aria-expanded="false" aria-controls="sidebar-collapse-111">
                    <a href="111">2.   Sequence Evaluation and Tail Recursion      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-112">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-109" href="#sidebar-collapse-112" aria-expanded="false" aria-controls="sidebar-collapse-112">
                    <a href="112">3.   Conditionals, Assignments, and Definitions      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-113">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-109" href="#sidebar-collapse-113" aria-expanded="false" aria-controls="sidebar-collapse-113">
                    <a href="113">4.   Running the Evaluator      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-114">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-114" aria-expanded="true" aria-controls="sidebar-collapse-114">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-114" aria-expanded="true" aria-controls="sidebar-collapse-114">
                    -
                  </a>
                    <a href="114">5. Compilation</a>
                </h5>
              </div>
              <div id="sidebar-collapse-114" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-115">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-114" href="#sidebar-collapse-115" aria-expanded="false" aria-controls="sidebar-collapse-115">
                    <a href="115">1.   Structure of the Compiler      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-116">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-114" href="#sidebar-collapse-116" aria-expanded="false" aria-controls="sidebar-collapse-116">
                    <a href="116">2.   Compiling Expressions      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-117">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-114" href="#sidebar-collapse-117" aria-expanded="false" aria-controls="sidebar-collapse-117">
                    <a href="117">3.   Compiling Combinations      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-118">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-114" href="#sidebar-collapse-118" aria-expanded="false" aria-controls="sidebar-collapse-118">
                    <a href="118">4.   Combining Instruction Sequences      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-119">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-114" href="#sidebar-collapse-119" aria-expanded="false" aria-controls="sidebar-collapse-119">
                    <a href="119">5.   An Example of Compiled Code      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-120">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-114" href="#sidebar-collapse-120" aria-expanded="false" aria-controls="sidebar-collapse-120">
                    <a href="120">6.   Lexical Addressing      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-121">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-114" href="#sidebar-collapse-121" aria-expanded="false" aria-controls="sidebar-collapse-121">
                    <a href="121">7.   Interfacing Compiled Code to the Evaluator      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

          </div>

           <div class="chapter-content">
    <div class="chapter-title">
        2.2.2.
        Hierarchical Structures
      
    </div>
    <div class="chapter-text" >
        <div class="SUBSECTION"><SUBSECTION>
      

      
      
      
      
      
      <p>
        The representation of sequences in terms of lists generalizes
        naturally to represent sequences whose elements may
        themselves be sequences.  For example, we can regard the object
        <kbd>[[1,[2,[]]],[3,[4,[]]]]</kbd> constructed by

        <div class="snippet" id="javascript_31_0_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('pair(list(1,2),list(3,4))','javascript_31_0','', event,1.0);window.eval('');">pair(list(1,2),list(3,4))</pre>
<a href="http://source-ide-new.surge.sh/?snippet=pair(list(1,2),list(3,4))&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
        as a list of three items, the first of which is itself a list, <kbd>[1,[2,[]]]</kbd>. Figure <REF NAME="fig:cons-of-2-lists"></REF> shows
        the representation of this structure in terms of pairs.

              <img src="img_original/ch2-Z-G-15.gif">
      </p>

      <p>
        Another way to think of sequences whose elements are sequences is as
        <EM>trees</EM>.  The elements of the sequence are the branches of the
        tree, and elements that are themselves sequences are subtrees.
        Figure <REF NAME="fig:list-as-tree-javascript"></REF> shows the structure in
        Figure <REF NAME="fig:cons-of-2-lists"></REF> viewed as a tree.

        <SPLIT>
          
          
              <FIGURE>
                
                <div class="chapter-text-CAPTION">The list structure in Figure <REF NAME="fig:cons-of-2-lists"></REF> viewed as a tree.
                </div>
                <TREETAB>
                <img src="img_tex/ch2_2_2-1.png">
                </TREETAB>
              </FIGURE>
          
        </SPLIT>
      </p>

      <p>
        
        Recursion is a natural tool for dealing with tree structures, since
        we can often reduce operations on trees to operations on their
        branches, which reduce in turn to operations on the branches of the
        branches, and so on, until we reach the leaves of the tree.
        As an example, compare the <kbd>length</kbd>
        function
        of
        Section <REF NAME="sec:sequences"></REF> with the
        
        
        <kbd>count_leaves</kbd>
        function, which
        returns the total number of leaves of a tree:

        <div class="snippet" id="javascript_31_1_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('var x = [[1,[2,[]]],[3,[4,[]]]];','javascript_31_1','', event,1.0);window.eval('');">var x = [[1,[2,[]]],[3,[4,[]]]];</pre>
<a href="http://source-ide-new.surge.sh/?snippet=var%20x%20=%20%5B%5B1,%5B2,%5B%5D%5D%5D,%5B3,%5B4,%5B%5D%5D%5D%5D;&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

        <div class="snippet" id="javascript_31_2_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('length(x)','javascript_31_2','', event,1.0);window.eval('var x=[[1,[2,[]]],[3,[4,[]]]];function length(items){if(is_empty_list(items)){return 0}else{return 1+length(tail(items))}};');">length(x)</pre>
<a href="http://source-ide-new.surge.sh/?snippet=length(x)&amp;hidden=var%20x=%5B%5B1,%5B2,%5B%5D%5D%5D,%5B3,%5B4,%5B%5D%5D%5D%5D;function%20length(items)%7Bif(is_empty_list(items))%7Breturn%200%7Delse%7Breturn%201+length(tail(items))%7D%7D;" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

        <div class="snippet" id="javascript_31_3_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('count_leaves(x)','javascript_31_3','', event,1.0);window.eval('var x=[[1,[2,[]]],[3,[4,[]]]];function count_leaves(x){if(is_empty_list(x)){return 0}else{if(!is_pair(x)){return 1}else{return count_leaves(head(x))+count_leaves(tail(x))}}};');">count_leaves(x)</pre>
<a href="http://source-ide-new.surge.sh/?snippet=count_leaves(x)&amp;hidden=var%20x=%5B%5B1,%5B2,%5B%5D%5D%5D,%5B3,%5B4,%5B%5D%5D%5D%5D;function%20count_leaves(x)%7Bif(is_empty_list(x))%7Breturn%200%7Delse%7Bif(!is_pair(x))%7Breturn%201%7Delse%7Breturn%20count_leaves(head(x))+count_leaves(tail(x))%7D%7D%7D;" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

        <div class="snippet" id="javascript_31_4_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('list(x,x)','javascript_31_4','', event,1.0);window.eval('var x=[[1,[2,[]]],[3,[4,[]]]];');">list(x,x)</pre>
<a href="http://source-ide-new.surge.sh/?snippet=list(x,x)&amp;hidden=var%20x=%5B%5B1,%5B2,%5B%5D%5D%5D,%5B3,%5B4,%5B%5D%5D%5D%5D;" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

        <div class="snippet" id="javascript_31_5_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('length(list(x,x))','javascript_31_5','', event,1.0);window.eval('var x=[[1,[2,[]]],[3,[4,[]]]];function length(items){if(is_empty_list(items)){return 0}else{return 1+length(tail(items))}};');">length(list(x,x))</pre>
<a href="http://source-ide-new.surge.sh/?snippet=length(list(x,x))&amp;hidden=var%20x=%5B%5B1,%5B2,%5B%5D%5D%5D,%5B3,%5B4,%5B%5D%5D%5D%5D;function%20length(items)%7Bif(is_empty_list(items))%7Breturn%200%7Delse%7Breturn%201+length(tail(items))%7D%7D;" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

        <div class="snippet" id="javascript_31_6_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('count_leaves(list(x,x))','javascript_31_6','', event,1.0);window.eval('var x=[[1,[2,[]]],[3,[4,[]]]];function count_leaves(x){if(is_empty_list(x)){return 0}else{if(!is_pair(x)){return 1}else{return count_leaves(head(x))+count_leaves(tail(x))}}};');">count_leaves(list(x,x))</pre>
<a href="http://source-ide-new.surge.sh/?snippet=count_leaves(list(x,x))&amp;hidden=var%20x=%5B%5B1,%5B2,%5B%5D%5D%5D,%5B3,%5B4,%5B%5D%5D%5D%5D;function%20count_leaves(x)%7Bif(is_empty_list(x))%7Breturn%200%7Delse%7Bif(!is_pair(x))%7Breturn%201%7Delse%7Breturn%20count_leaves(head(x))+count_leaves(tail(x))%7D%7D%7D;" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
        To implement <kbd>count_leaves</kbd>, recall the recursive plan for computing
        <kbd>length</kbd>:

        <UL>
          <LI> The <kbd>length</kbd> of a list <kbd>x</kbd> is 1 plus the <kbd>length</kbd> of the
            <kbd>tail</kbd> of <kbd>x</kbd>.
          </LI>
          <LI>
            The <kbd>length</kbd> of the empty list is 0.
          </LI>
        </UL>
        The function <kbd>count_leaves</kbd> is similar.  The value for the empty list is the same:
        <UL>
          <LI>
            <kbd>count_leaves</kbd> of the empty list is 0.
          </LI>
        </UL>
        But in the reduction step, where we strip off the <kbd>head</kbd> of the
        list, we must take into account that the <kbd>head</kbd> may itself be a
        tree whose leaves we need to count.  Thus, the appropriate reduction
        step is
        <UL>
          <LI>
            <kbd>count_leaves</kbd> of a tree <kbd>x</kbd> is <kbd>count_leaves</kbd> of the <kbd>head</kbd> of <kbd>x</kbd> plus <kbd>count_leaves</kbd> of the
            <kbd>tail</kbd> of <kbd>x</kbd>.
          </LI>
        </UL>
        Finally, by taking <kbd>head</kbd>s we reach
        actual leaves, so we need another base case:
        <UL>
          <LI>
            <kbd>count_leaves</kbd> of a leaf is 1.
          </LI>
        </UL>
        To aid in writing recursive
        functions
        on trees, our JavaScript environment provides the primitive
        predicate
        
        
        <kbd>is_pair</kbd>, which tests whether its argument is a pair.
        Here is the complete
        function:<a class="superscript" id="footnote-link-1" href="31#footnote-1">[1]</a>

        <div class="snippet" id="javascript_31_7_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('function count_leaves(x) {\n   if (is_empty_list(x))\n      return 0;\n   else if (! is_pair(x))\n      return 1;\n   else return count_leaves(head(x)) +\n               count_leaves(tail(x));\n}','javascript_31_7','', event,1.0);window.eval('');">function count_leaves(x) {
   if (is_empty_list(x))
      return 0;
   else if (! is_pair(x))
      return 1;
   else return count_leaves(head(x)) +
               count_leaves(tail(x));
}</pre>
<a href="http://source-ide-new.surge.sh/?snippet=function%20count_leaves(x)%20%7B%0A%20%20%20if%20(is_empty_list(x))%0A%20%20%20%20%20%20return%200;%0A%20%20%20else%20if%20(!%20is_pair(x))%0A%20%20%20%20%20%20return%201;%0A%20%20%20else%20return%20count_leaves(head(x))%20+%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20count_leaves(tail(x));%0A%7D&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

        

      </p>

      <EXERCISE>
        Suppose we evaluate the expression
        <kbd>list(1,list(2,list(3,4)))</kbd>.
        Give the result printed by the interpreter, the corresponding
        box-and-pointer structure, and the interpretation of this as a tree
        (as in Figure <REF NAME="fig:list-as-tree"></REF>).
        
    
      </EXERCISE>

      <EXERCISE>
        Give combinations of <kbd>head</kbd>s and <kbd>tail</kbd>s that will pick 7 from
        each of the following lists:

        <kbd EVAL="no" class="snippet">[1,[3,[[5,[7,[]]],[9,[]]]]]

[[7,[]],[]]

[1,[[2,[[3,[[4,[[5,[[6,[7,[]]],[]]],[]]],[]]],[]]],[]]]</kbd>
    
      </EXERCISE>

      <EXERCISE>
        Suppose we define <kbd>x</kbd> and <kbd>y</kbd> to be two lists:

        <div class="snippet" id="javascript_31_8_div"></div>
<div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('var x = list(1,2,3);\n\nvar y = list(1,2,3);','javascript_31_8','', event,1.0);window.eval('');">var x = list(1,2,3);

var y = list(1,2,3);</pre>
<a href="http://source-ide-new.surge.sh/?snippet=var%20x%20=%20list(1,2,3);%0A%0Avar%20y%20=%20list(1,2,3);&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

        What result is printed by the interpreter in response to evaluating
        each of the following expressions:

        <div class="snippet" id="javascript_31_9_div"></div>
<div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('append(x,y)','javascript_31_9','', event,1.0);window.eval('var x=list(1,2,3);var y=list(1,2,3);function append(list1,list2){if(is_empty_list(list1)){return list2}else{return pair(head(list1),append(tail(list1),list2))}};');">append(x,y)</pre>
<a href="http://source-ide-new.surge.sh/?snippet=append(x,y)&amp;hidden=var%20x=list(1,2,3);var%20y=list(1,2,3);function%20append(list1,list2)%7Bif(is_empty_list(list1))%7Breturn%20list2%7Delse%7Breturn%20pair(head(list1),append(tail(list1),list2))%7D%7D;" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>


        <div class="snippet" id="javascript_31_10_div"></div>
<div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('pair(x,y)','javascript_31_10','', event,1.0);window.eval('var x=list(1,2,3);var y=list(1,2,3);');">pair(x,y)</pre>
<a href="http://source-ide-new.surge.sh/?snippet=pair(x,y)&amp;hidden=var%20x=list(1,2,3);var%20y=list(1,2,3);" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

        <div class="snippet" id="javascript_31_11_div"></div>
<div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('list(x,y)','javascript_31_11','', event,1.0);window.eval('var x=list(1,2,3);var y=list(1,2,3);');">list(x,y)</pre>
<a href="http://source-ide-new.surge.sh/?snippet=list(x,y)&amp;hidden=var%20x=list(1,2,3);var%20y=list(1,2,3);" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

      </EXERCISE>

      <EXERCISE>
        Modify your <kbd>reverse</kbd>
        function
        of Exercise <REF NAME="ex:reverse"></REF> to
        produce a
        
        
        <kbd>deep_reverse</kbd>
        function
        that takes a list as argument
        and returns as its value the list with its elements reversed and with
        all sublists deep-reversed as well.  For example, <CHANGE>consider</CHANGE>
        <div class="snippet" id="javascript_31_12_div"></div>
<div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('var x = list(list(1,2),list(3,4));','javascript_31_12','', event,1.0);window.eval('');">var x = list(list(1,2),list(3,4));</pre>
<a href="http://source-ide-new.surge.sh/?snippet=var%20x%20=%20list(list(1,2),list(3,4));&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
        <CHANGE>Here,</CHANGE>
        <div class="snippet" id="javascript_31_13_div"></div>
<div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('x','javascript_31_13','', event,1.0);window.eval('var x=list(list(1,2),list(3,4));');">x</pre>
<a href="http://source-ide-new.surge.sh/?snippet=x&amp;hidden=var%20x=list(list(1,2),list(3,4));" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

        <CHANGE>should return</CHANGE>

        <kbd EVAL="no" class="snippet">[[1,[2,[]]],[[3,[4,[]]],[]]]</kbd>

        <div class="snippet" id="javascript_31_14_div"></div>
<div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('reverse(x)','javascript_31_14','', event,1.0);window.eval('var x=list(list(1,2),list(3,4));\n// reverse to be given by student\n          ');">reverse(x)</pre>
<a href="http://source-ide-new.surge.sh/?snippet=reverse(x)&amp;hidden=var%20x=list(list(1,2),list(3,4));%0A//%20reverse%20to%20be%20given%20by%20student%0A%20%20%20%20%20%20%20%20%20%20" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
        <CHANGE>should return</CHANGE>
        <kbd EVAL="no" class="snippet">[[3,[4,[]]],[[1,[2,[]]],[]]]</kbd>
        <CHANGE>whereas</CHANGE>
        
        <div class="snippet" id="javascript_31_15_div"></div>
<div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('deep_reverse(x)','javascript_31_15','', event,1.0);window.eval('var x=list(list(1,2),list(3,4));\n// deep_reverse to be written by student; see Exercise 2.27\n          ');">deep_reverse(x)</pre>
<a href="http://source-ide-new.surge.sh/?snippet=deep_reverse(x)&amp;hidden=var%20x=list(list(1,2),list(3,4));%0A//%20deep_reverse%20to%20be%20written%20by%20student;%20see%20Exercise%202.27%0A%20%20%20%20%20%20%20%20%20%20" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
        <CHANGE>should return</CHANGE>
        <kbd EVAL="no" class="snippet">[[4,[3,[]]],[[2,[1,[]]],[]]]</kbd>

      </EXERCISE>

      <EXERCISE>
        
        Write a
        function

        
        
        <kbd>fringe</kbd> that takes as argument a tree
        (represented as a list) and returns a list whose elements are all the
        leaves of the tree arranged in left-to-right order.  For example,
        <CHANGE>consider</CHANGE>

        

        <div class="snippet" id="javascript_31_16_div"></div>
<div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('var x = list(list(1,2),list(3,4))','javascript_31_16','', event,1.0);window.eval('');">var x = list(list(1,2),list(3,4))</pre>
<a href="http://source-ide-new.surge.sh/?snippet=var%20x%20=%20list(list(1,2),list(3,4))&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
        <CHANGE>Here,</CHANGE>
        <div class="snippet" id="javascript_31_17_div"></div>
<div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('fringe(x)','javascript_31_17','', event,1.0);window.eval('\n// fringe to be written by student; see Exercise 2.28\n          ');">fringe(x)</pre>
<a href="http://source-ide-new.surge.sh/?snippet=fringe(x)&amp;hidden=%0A//%20fringe%20to%20be%20written%20by%20student;%20see%20Exercise%202.28%0A%20%20%20%20%20%20%20%20%20%20" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
        <CHANGE>should return</CHANGE>
        <kbd EVAL="no" class="snippet">[1,[2,[3,[4,[]]]]]</kbd>
        and
        <div class="snippet" id="javascript_31_18_div"></div>
<div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('fringe(list(x,x))','javascript_31_18','', event,1.0);window.eval('\n// fringe to be written by student; see Exercise 2.28\n          ');">fringe(list(x,x))</pre>
<a href="http://source-ide-new.surge.sh/?snippet=fringe(list(x,x))&amp;hidden=%0A//%20fringe%20to%20be%20written%20by%20student;%20see%20Exercise%202.28%0A%20%20%20%20%20%20%20%20%20%20" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
        should return
        <kbd EVAL="no" class="snippet">[1,[2,[3,[4,[1,[2,[3,[4,[]]]]]]]]]</kbd>

      </EXERCISE>

      <EXERCISE>
        
        A binary mobile consists of two branches, a left branch and a right
        branch.  Each branch is a rod of a certain length, from which hangs
        either a weight or another binary mobile.  We can represent a binary
        mobile using compound data by constructing it from two branches (for
        example, using <kbd>list</kbd>):

        <div class="snippet" id="javascript_31_19_div"></div>
<div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('function make_mobile(left,right) {\n   return list(left,right);\n}','javascript_31_19','', event,1.0);window.eval('');">function make_mobile(left,right) {
   return list(left,right);
}</pre>
<a href="http://source-ide-new.surge.sh/?snippet=function%20make_mobile(left,right)%20%7B%0A%20%20%20return%20list(left,right);%0A%7D&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

        A branch is constructed from a <kbd>length</kbd> (which must be a number)
        together with a <kbd>structure</kbd>, which may be either a number
        (representing a simple weight) or another mobile:

        <div class="snippet" id="javascript_31_20_div"></div>
<div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('function make_branch(length,structure) {\n   return list(length,structure);\n}','javascript_31_20','', event,1.0);window.eval('');">function make_branch(length,structure) {
   return list(length,structure);
}</pre>
<a href="http://source-ide-new.surge.sh/?snippet=function%20make_branch(length,structure)%20%7B%0A%20%20%20return%20list(length,structure);%0A%7D&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

        <OL>
          <LI>
            Write the corresponding selectors <kbd>left_branch</kbd> and
            <kbd>right_branch</kbd>, which return the branches of a mobile, and
                <kbd>branch_length</kbd> and <kbd>branch_structure</kbd>, which return
            the components of a branch.
          </LI>

          <LI>
            Using your selectors, define a
            function
            <kbd>total_weight</kbd>
            that returns the total weight of a mobile.
          </LI>

          <LI>
            A mobile is said to be
            
            <EM>balanced</EM> if the torque applied
            by its top-left branch is equal to that applied by its top-right
            branch (that is, if the length of the left rod multiplied by the
            weight hanging from that rod is equal to the corresponding product for
            the right side) and if each of the submobiles hanging off its branches
            is balanced. Design a predicate that tests whether a binary mobile is
            balanced.
          </LI>

          <LI>
            Suppose we change the representation of mobiles so that the
            constructors are

            <div class="snippet" id="javascript_31_21_div"></div>
<div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('function make_mobile(left,right) {\n   return pair(left,right);\n}\nfunction make_branch(length,structure) {\n   return pair(length,structure);\n}','javascript_31_21','', event,1.0);window.eval('');">function make_mobile(left,right) {
   return pair(left,right);
}
function make_branch(length,structure) {
   return pair(length,structure);
}</pre>
<a href="http://source-ide-new.surge.sh/?snippet=function%20make_mobile(left,right)%20%7B%0A%20%20%20return%20pair(left,right);%0A%7D%0Afunction%20make_branch(length,structure)%20%7B%0A%20%20%20return%20pair(length,structure);%0A%7D&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

            How much do you need to change your programs to convert to the new
            representation?
          </LI>
        </OL>
        
    
    
      </EXERCISE>
      
      
      
      

      <h2>
        Mapping over trees
      </h2>

      
      

      <p>
        Just as <kbd>map</kbd> is a powerful abstraction for dealing with sequences,
        <kbd>map</kbd> together with recursion is a powerful abstraction for
        dealing with trees.  For instance, the <kbd>scale_tree</kbd>
        function, analogous to <kbd>scale_list</kbd> of
        Section <REF NAME="sec:sequences"></REF>, takes as arguments a numeric factor and a
        tree whose leaves are numbers.  It returns a tree of the same shape,
        where each number is multiplied by the factor.
        The recursive plan for <kbd>scale_tree</kbd> is similar to the one for
        <kbd>count_leaves</kbd>:

        <div class="snippet" id="javascript_31_22_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('function scale_tree(tree,factor) {\n   if (is_empty_list(tree))\n      return [];\n   else if (! is_pair(tree))\n      return tree * factor;\n   else return pair(scale_tree(head(tree),factor),\n                    scale_tree(tail(tree),factor));\n}','javascript_31_22','', event,1.0);window.eval('');">function scale_tree(tree,factor) {
   if (is_empty_list(tree))
      return [];
   else if (! is_pair(tree))
      return tree * factor;
   else return pair(scale_tree(head(tree),factor),
                    scale_tree(tail(tree),factor));
}</pre>
<a href="http://source-ide-new.surge.sh/?snippet=function%20scale_tree(tree,factor)%20%7B%0A%20%20%20if%20(is_empty_list(tree))%0A%20%20%20%20%20%20return%20%5B%5D;%0A%20%20%20else%20if%20(!%20is_pair(tree))%0A%20%20%20%20%20%20return%20tree%20*%20factor;%0A%20%20%20else%20return%20pair(scale_tree(head(tree),factor),%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20scale_tree(tail(tree),factor));%0A%7D&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

        <div class="snippet" id="javascript_31_23_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('scale_tree(list(1,list(2,list(3,4),5),list(6,7)),\n           10)','javascript_31_23','', event,1.0);window.eval('function scale_tree(tree,factor){if(is_empty_list(tree)){return[]}else{if(!is_pair(tree)){return tree*factor}else{return pair(scale_tree(head(tree),factor),scale_tree(tail(tree),factor))}}};');">scale_tree(list(1,list(2,list(3,4),5),list(6,7)),
           10)</pre>
<a href="http://source-ide-new.surge.sh/?snippet=scale_tree(list(1,list(2,list(3,4),5),list(6,7)),%0A%20%20%20%20%20%20%20%20%20%20%2010)&amp;hidden=function%20scale_tree(tree,factor)%7Bif(is_empty_list(tree))%7Breturn%5B%5D%7Delse%7Bif(!is_pair(tree))%7Breturn%20tree*factor%7Delse%7Breturn%20pair(scale_tree(head(tree),factor),scale_tree(tail(tree),factor))%7D%7D%7D;" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
        Another way to implement <kbd>scale_tree</kbd> is to regard the
        tree as a sequence of sub-trees and use <kbd>map</kbd>.  We map
        over the sequence, scaling each sub-tree in turn, and return the list
        of results.  In the base case, where the tree is a leaf, we simply
        multiply by the factor:

        <div class="snippet" id="javascript_31_24_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('function scale_tree(tree,factor) {\n   return map(function(sub_tree) {\n                 if (is_pair(sub_tree))\n                    return scale_tree(sub_tree,factor);\n                 else\n                    return sub_tree * factor;\n              },\n              tree);\n}','javascript_31_24','', event,1.0);window.eval('function map(fun,items){if(is_empty_list(items)){return[]}else{return pair(fun(head(items)),map(fun,tail(items)))}};');">function scale_tree(tree,factor) {
   return map(function(sub_tree) {
                 if (is_pair(sub_tree))
                    return scale_tree(sub_tree,factor);
                 else
                    return sub_tree * factor;
              },
              tree);
}</pre>
<a href="http://source-ide-new.surge.sh/?snippet=function%20scale_tree(tree,factor)%20%7B%0A%20%20%20return%20map(function(sub_tree)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if%20(is_pair(sub_tree))%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20scale_tree(sub_tree,factor);%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20else%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20sub_tree%20*%20factor;%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D,%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20tree);%0A%7D&amp;hidden=function%20map(fun,items)%7Bif(is_empty_list(items))%7Breturn%5B%5D%7Delse%7Breturn%20pair(fun(head(items)),map(fun,tail(items)))%7D%7D;" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
        Many tree operations can be implemented by similar combinations of
        sequence operations and recursion.
      </p>

      <EXERCISE>
        Define a
        function
        <kbd>square_tree</kbd> analogous to the <kbd>square_list</kbd>
        function
        of Exercise <REF NAME="ex:square-list"></REF>.  That is, <kbd>square_tree</kbd> should behave as follows:

        

        <div class="snippet" id="javascript_31_25_div"></div>
<div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('square_tree(list(1,\n                 list(2,list(3,4),5),\n                 list(6,7)))','javascript_31_25','', event,1.0);window.eval('\n// square_tree to be written by student; see Exercise 2.30\n          ');">square_tree(list(1,
                 list(2,list(3,4),5),
                 list(6,7)))</pre>
<a href="http://source-ide-new.surge.sh/?snippet=square_tree(list(1,%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20list(2,list(3,4),5),%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20list(6,7)))&amp;hidden=%0A//%20square_tree%20to%20be%20written%20by%20student;%20see%20Exercise%202.30%0A%20%20%20%20%20%20%20%20%20%20" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
        <CHANGE>
          should return
        <kbd EVAL="no" class="snippet">[1,[[4,[[9,[16,[]]],[25,[]]]],[[36,[49,[]]],[]]]]</kbd>
        </CHANGE>
        Define <kbd>square_tree</kbd> both directly (i.e., without using any
        higher-order
        functions) and also by using <kbd>map</kbd> and recursion.
        
    
      </EXERCISE>

      <EXERCISE>
        Abstract your answer to Exercise <REF NAME="ex:square-tree"></REF> to produce a
        function

        
        <kbd>tree_map</kbd> with the property that <kbd>square_tree</kbd>
        could be defined as

        

        <div class="snippet" id="javascript_31_26_div"></div>
<div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('function square_tree(tree) {\n   return tree_map(square,tree);\n}','javascript_31_26','', event,1.0);window.eval('\n// square_tree to be written by student; see Exercise 2.30\n          \n// tree_map to be written by student; see Exercise 2.31\n          ');">function square_tree(tree) {
   return tree_map(square,tree);
}</pre>
<a href="http://source-ide-new.surge.sh/?snippet=function%20square_tree(tree)%20%7B%0A%20%20%20return%20tree_map(square,tree);%0A%7D&amp;hidden=%0A//%20square_tree%20to%20be%20written%20by%20student;%20see%20Exercise%202.30%0A%20%20%20%20%20%20%20%20%20%20%0A//%20tree_map%20to%20be%20written%20by%20student;%20see%20Exercise%202.31%0A%20%20%20%20%20%20%20%20%20%20" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
    
      </EXERCISE>

      <EXERCISE>
        We can represent a
        
        set as a list of distinct elements, and we can
        represent the set of all subsets of the set as a list of lists.  For
        example, if the set is <kbd>[1,[2,[3,[]]]]</kbd>, then the set of all subsets is
        <kbd>[[],[[3,[]],[[2,[]],[[2,[3,[]]],[[1,[]],[[2,[3,[]]],[[1,[2,[]]],[[1,[2,[3,[]]]],[]]]]]]]]]</kbd>.  Complete the
        following definition of a
        function
        that generates the set of subsets
        of a set and give a clear explanation of why it works:
        <div class="snippet" id="javascript_31_27_div"></div>
<div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('function subsets(s) {\n   if (is_empty_list(s))\n      return list([]);\n   else {\n      var rest = subsets(tail(s));\n      return append(rest,map(^??^,rest));\n   }\n}','javascript_31_27','', event,1.0);window.eval('function append(list1,list2){if(is_empty_list(list1)){return list2}else{return pair(head(list1),append(tail(list1),list2))}};function map(fun,items){if(is_empty_list(items)){return[]}else{return pair(fun(head(items)),map(fun,tail(items)))}};');">function subsets(s) {
   if (is_empty_list(s))
      return list([]);
   else {
      var rest = subsets(tail(s));
      return append(rest,map(^??^,rest));
   }
}</pre>
<a href="http://source-ide-new.surge.sh/?snippet=function%20subsets(s)%20%7B%0A%20%20%20if%20(is_empty_list(s))%0A%20%20%20%20%20%20return%20list(%5B%5D);%0A%20%20%20else%20%7B%0A%20%20%20%20%20%20var%20rest%20=%20subsets(tail(s));%0A%20%20%20%20%20%20return%20append(rest,map(%5E??%5E,rest));%0A%20%20%20%7D%0A%7D&amp;hidden=function%20append(list1,list2)%7Bif(is_empty_list(list1))%7Breturn%20list2%7Delse%7Breturn%20pair(head(list1),append(tail(list1),list2))%7D%7D;function%20map(fun,items)%7Bif(is_empty_list(items))%7Breturn%5B%5D%7Delse%7Breturn%20pair(fun(head(items)),map(fun,tail(items)))%7D%7D;" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
    
    
      </EXERCISE>
      
      

    <hr>
<div class="footnote">
<a class="footnote-number" id="footnote-1" href="31#footnote-link-1">[1] </a><FOOTNOTE>The order of the
          first two clauses in the <kbd>cond</kbd> matters, since the empty list
          satisfies <kbd>null?</kbd> and also is not a pair.</FOOTNOTE>
</div></SUBSECTION></div>
    </div>

    <div class="nav">
    <!--
      <div type="button" class="btn btn-secondary">
        <a href="http://localhost:3000/chapters/30">&lt; Previous</a>
    </div>
    -->
      <div type="button" class="btn btn-secondary">
        <a class="scroll-next" href="32">Next &gt;</a>
      </div>


  </div>
  <script>
//<![CDATA[
var chapter_id = 31;
//]]>
</script>
  <div class="next-page"></div>
</div>

     </div><!-- /.container -->

     <!--<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js" integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn" crossorigin="anonymous"></script>
     -->
   </body>
</html>
