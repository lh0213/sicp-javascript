<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SicpTextbookRails</title>
    <meta name="csrf-param" content="authenticity_token" />
<meta name="csrf-token" content="3shA/8g2SgSC2ONhtNDAyHzf8QpwHzGDsEq5VakIpmMiQhB21HVLHCTzcVUgB0oCmjeZXE75VefxPonv6AyPjQ==" />

    <!--<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css" integrity="sha384-rwoIResjU2yc3z8GV/NPeZWAv56rSmLldC3R/AZzGRnGxQQKnKkoFVhFQhNUwEyJ" crossorigin="anonymous">
    -->
    <link href="https://fonts.googleapis.com/css?family=Droid+Sans|Droid+Sans+Mono|Droid+Serif" rel="stylesheet">
    <link rel="stylesheet" media="all" href="../assets/application-4afa0dc75ea8a2ff925eb41df709aa5f5fae6640df639d9b6ae50ed06be5a5d2.css" />

    <link rel="shortcut icon" type="image/x-icon" href="../assets/favicon-5cc7f923fb946d60fe9552847f4b6edd0f8cf2f122d6f3fef39d59ce84d47942.ico" />

    <script src="https://code.jquery.com/jquery-3.2.1.min.js"
			  integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="
	          crossorigin="anonymous">
    </script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/tether/1.4.0/js/tether.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js" integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn" crossorigin="anonymous"></script>
    <script type="text/javascript" async
        src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML">
    </script>

    <script src="../assets/application-e1d34c17f2d1680f21b650089aea08e3ecfe292f1157f2d23bfa7d4d9d530c8b.js"></script>

    <!-- Rendering inline LaTeX -->
    <script type="text/x-mathjax-config">
      MathJax.Hub.Config({
        tex2jax: {
          inlineMath: [ ['$','$'], ["\\(","\\)"] ],
          processEscapes: true,
          jax: ["input/TeX","output/HTML-CSS"]
        }
      });
    </script>
    <!--<script src="/mathjax/MathJax.js?config=TeX-AMS_HTML-full.js" type="text/javascript"></script>-->
    <!-- Le HTML5 shim, for IE6-8 support of HTML elements -->
    <!--[if lt IE 9]>
    <script src="//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.2/html5shiv.min.js" type="text/javascript"></script>
    <![endif]-->
  </head>
  <body>

     <nav class="navbar navbar-toggleable-md navbar-inverse bg-inverse fixed-top">
      <button class="navbar-toggler collapsed" type="button" data-toggle="collapse" data-target="#nav-sidebar" aria-controls="nav-sidebar" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
       <a class="navbar-brand navbar-brand-short" href="../chapters">CS1101S: SICP</a>
       <a class="navbar-brand navbar-brand-long" href="../chapters">CS1101S: Structure and Interpretation
          of Computer Programs</a>

       <div class="collapse navbar-collapse" id="navbarsExampleDefault">
         <form id="search" class="form-inline my-2 my-lg-0">
           <input id="search-box" class="form-control mr-sm-2" type="text" placeholder="Search">
           <div id="search-button" class="btn btn-outline-success my-2 my-sm-0">Search</div>

           <script>
               (function() {
                var cx = "002429487986305006822:ztnrbwx01qy";
                var gcse = document.createElement('script');
                gcse.type = 'text/javascript';
                gcse.async = true;
                gcse.src = 'https://cse.google.com/cse.js?cx=' + cx;
                var s = document.getElementsByTagName('script')[0];
                s.parentNode.insertBefore(gcse, s);
               })();
            </script>
            <gcse:search></gcse:search>
         </form>
       </div>
     </nav>

     <div class="container scroll">

          <div class="collapse" id="nav-sidebar" role="tablist" aria-multiselectable="true">
                             <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-122">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-122" aria-expanded="false" aria-controls="sidebar-collapse-122">
                    <a href="122">About</a>
                  </a>
                </h5>
              </div>
            </div>

                             <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-123">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-123" aria-expanded="false" aria-controls="sidebar-collapse-123">
                    <a href="123">References</a>
                  </a>
                </h5>
              </div>
            </div>

                             <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-124">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-124" aria-expanded="false" aria-controls="sidebar-collapse-124">
                    <a href="124">Webpreface</a>
                  </a>
                </h5>
              </div>
            </div>

                             <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-1">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-1" aria-expanded="true" aria-controls="sidebar-collapse-1">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-1" aria-expanded="true" aria-controls="sidebar-collapse-1">
                    -
                  </a>
                    <a href="1">1.       Building Abstractions with       Functions    </a>
                </h5>
              </div>
              <div id="sidebar-collapse-1" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-2">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-1" href="#sidebar-collapse-2" aria-expanded="true" aria-controls="sidebar-collapse-2">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-1" href="#sidebar-collapse-2" aria-expanded="true" aria-controls="sidebar-collapse-2">
                    -
                  </a>
                    <a href="2">1. The Elements of Programming</a>
                </h5>
              </div>
              <div id="sidebar-collapse-2" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-3">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-2" href="#sidebar-collapse-3" aria-expanded="false" aria-controls="sidebar-collapse-3">
                    <a href="3">1. Expressions</a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-4">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-2" href="#sidebar-collapse-4" aria-expanded="false" aria-controls="sidebar-collapse-4">
                    <a href="4">2. Naming and the Environment</a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-5">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-2" href="#sidebar-collapse-5" aria-expanded="false" aria-controls="sidebar-collapse-5">
                    <a href="5">3.           Evaluating          Operator Combinations                  </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-6">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-2" href="#sidebar-collapse-6" aria-expanded="false" aria-controls="sidebar-collapse-6">
                    <a href="6">4.           Functions        </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-7">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-2" href="#sidebar-collapse-7" aria-expanded="false" aria-controls="sidebar-collapse-7">
                    <a href="7">5.           The Substitution Model for                                                 Function                              Application        </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-8">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-2" href="#sidebar-collapse-8" aria-expanded="false" aria-controls="sidebar-collapse-8">
                    <a href="8">6.           Conditional                                           Statements                              and Predicates        </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-9">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-2" href="#sidebar-collapse-9" aria-expanded="false" aria-controls="sidebar-collapse-9">
                    <a href="9">7. Example: Square Roots by Newtons Method</a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-10">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-2" href="#sidebar-collapse-10" aria-expanded="false" aria-controls="sidebar-collapse-10">
                    <a href="10">8.                                                 Functions                                as Black-Box Abstractions        </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-11">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-1" href="#sidebar-collapse-11" aria-expanded="true" aria-controls="sidebar-collapse-11">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-1" href="#sidebar-collapse-11" aria-expanded="true" aria-controls="sidebar-collapse-11">
                    -
                  </a>
                    <a href="11">2.             Functions            and the Processes They Generate      </a>
                </h5>
              </div>
              <div id="sidebar-collapse-11" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-12">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-11" href="#sidebar-collapse-12" aria-expanded="false" aria-controls="sidebar-collapse-12">
                    <a href="12">1. Linear Recursion and Iteration</a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-13">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-11" href="#sidebar-collapse-13" aria-expanded="false" aria-controls="sidebar-collapse-13">
                    <a href="13">2. Tree Recursion</a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-14">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-11" href="#sidebar-collapse-14" aria-expanded="false" aria-controls="sidebar-collapse-14">
                    <a href="14">3. Orders of Growth</a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-15">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-11" href="#sidebar-collapse-15" aria-expanded="false" aria-controls="sidebar-collapse-15">
                    <a href="15">4. Exponentiation</a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-16">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-11" href="#sidebar-collapse-16" aria-expanded="false" aria-controls="sidebar-collapse-16">
                    <a href="16">5. Greatest Common Divisors</a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-17">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-11" href="#sidebar-collapse-17" aria-expanded="false" aria-controls="sidebar-collapse-17">
                    <a href="17">6. Example: Testing for Primality</a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-18">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-1" href="#sidebar-collapse-18" aria-expanded="true" aria-controls="sidebar-collapse-18">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-1" href="#sidebar-collapse-18" aria-expanded="true" aria-controls="sidebar-collapse-18">
                    -
                  </a>
                    <a href="18">3.         Formulating Abstractions with Higher-Order         Functions      </a>
                </h5>
              </div>
              <div id="sidebar-collapse-18" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-19">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-18" href="#sidebar-collapse-19" aria-expanded="false" aria-controls="sidebar-collapse-19">
                    <a href="19">1.           Functions          as Arguments        </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-20">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-18" href="#sidebar-collapse-20" aria-expanded="false" aria-controls="sidebar-collapse-20">
                    <a href="20">2.           Function Definition Expressions          </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-21">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-18" href="#sidebar-collapse-21" aria-expanded="false" aria-controls="sidebar-collapse-21">
                    <a href="21">3.             Functions            as General Methods          </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-22">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-18" href="#sidebar-collapse-22" aria-expanded="false" aria-controls="sidebar-collapse-22">
                    <a href="22">4.               Functions              as Returned Values            </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                             <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-23">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-23" aria-expanded="true" aria-controls="sidebar-collapse-23">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-23" aria-expanded="true" aria-controls="sidebar-collapse-23">
                    -
                  </a>
                    <a href="23">2. Building Abstractions with Data</a>
                </h5>
              </div>
              <div id="sidebar-collapse-23" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-24">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-24" aria-expanded="true" aria-controls="sidebar-collapse-24">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-24" aria-expanded="true" aria-controls="sidebar-collapse-24">
                    -
                  </a>
                    <a href="24">1. Introduction to Data Abstraction</a>
                </h5>
              </div>
              <div id="sidebar-collapse-24" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-25">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-24" href="#sidebar-collapse-25" aria-expanded="false" aria-controls="sidebar-collapse-25">
                    <a href="25">1.         Example: Arithmetic Operations for Rational Numbers      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-26">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-24" href="#sidebar-collapse-26" aria-expanded="false" aria-controls="sidebar-collapse-26">
                    <a href="26">2.         Abstraction Barriers      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-27">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-24" href="#sidebar-collapse-27" aria-expanded="false" aria-controls="sidebar-collapse-27">
                    <a href="27">3.         What Is Meant by Data?      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-28">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-24" href="#sidebar-collapse-28" aria-expanded="false" aria-controls="sidebar-collapse-28">
                    <a href="28">4.         Extended Exercise: Interval Arithmetic      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-29">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-29" aria-expanded="true" aria-controls="sidebar-collapse-29">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-29" aria-expanded="true" aria-controls="sidebar-collapse-29">
                    -
                  </a>
                    <a href="29">2. Hierarchical Data and the Closure Property</a>
                </h5>
              </div>
              <div id="sidebar-collapse-29" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-30">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-29" href="#sidebar-collapse-30" aria-expanded="false" aria-controls="sidebar-collapse-30">
                    <a href="30">1.         Representing Sequences      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-31">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-29" href="#sidebar-collapse-31" aria-expanded="false" aria-controls="sidebar-collapse-31">
                    <a href="31">2.         Hierarchical Structures      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-32">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-29" href="#sidebar-collapse-32" aria-expanded="false" aria-controls="sidebar-collapse-32">
                    <a href="32">3.         Sequences as Conventional Interfaces      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-33">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-29" href="#sidebar-collapse-33" aria-expanded="false" aria-controls="sidebar-collapse-33">
                    <a href="33">4.         Example: A Picture Language      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-34">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-34" aria-expanded="true" aria-controls="sidebar-collapse-34">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-34" aria-expanded="true" aria-controls="sidebar-collapse-34">
                    -
                  </a>
                    <a href="34">3. Symbolic Data</a>
                </h5>
              </div>
              <div id="sidebar-collapse-34" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-35">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-34" href="#sidebar-collapse-35" aria-expanded="false" aria-controls="sidebar-collapse-35">
                    <a href="35">1.         Strings      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-36">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-34" href="#sidebar-collapse-36" aria-expanded="false" aria-controls="sidebar-collapse-36">
                    <a href="36">2.         Example: Symbolic Differentiation      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-37">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-34" href="#sidebar-collapse-37" aria-expanded="false" aria-controls="sidebar-collapse-37">
                    <a href="37">3.         Example: Representing Sets      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-38">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-34" href="#sidebar-collapse-38" aria-expanded="false" aria-controls="sidebar-collapse-38">
                    <a href="38">4.         Example: Huffman Encoding Trees      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-39">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-39" aria-expanded="true" aria-controls="sidebar-collapse-39">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-39" aria-expanded="true" aria-controls="sidebar-collapse-39">
                    -
                  </a>
                    <a href="39">4. Multiple Representations for Abstract Data</a>
                </h5>
              </div>
              <div id="sidebar-collapse-39" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-40">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-39" href="#sidebar-collapse-40" aria-expanded="false" aria-controls="sidebar-collapse-40">
                    <a href="40">1.         Representations for Complex Numbers      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-41">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-39" href="#sidebar-collapse-41" aria-expanded="false" aria-controls="sidebar-collapse-41">
                    <a href="41">2.         Tagged data      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-42">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-39" href="#sidebar-collapse-42" aria-expanded="false" aria-controls="sidebar-collapse-42">
                    <a href="42">3.         Data-Directed Programming and Additivity      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-43">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-43" aria-expanded="true" aria-controls="sidebar-collapse-43">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-23" href="#sidebar-collapse-43" aria-expanded="true" aria-controls="sidebar-collapse-43">
                    -
                  </a>
                    <a href="43">5. Systems with Generic Operations</a>
                </h5>
              </div>
              <div id="sidebar-collapse-43" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-44">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-43" href="#sidebar-collapse-44" aria-expanded="false" aria-controls="sidebar-collapse-44">
                    <a href="44">1.         Generic Arithmetic Operations      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-45">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-43" href="#sidebar-collapse-45" aria-expanded="false" aria-controls="sidebar-collapse-45">
                    <a href="45">2.         Combining Data of Different Types      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-46">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-43" href="#sidebar-collapse-46" aria-expanded="false" aria-controls="sidebar-collapse-46">
                    <a href="46">3.         Example: Symbolic Algebra      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                             <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-47">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-47" aria-expanded="true" aria-controls="sidebar-collapse-47">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-47" aria-expanded="true" aria-controls="sidebar-collapse-47">
                    -
                  </a>
                    <a href="47">3. Modularity, Objects, and State</a>
                </h5>
              </div>
              <div id="sidebar-collapse-47" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-48">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-48" aria-expanded="true" aria-controls="sidebar-collapse-48">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-48" aria-expanded="true" aria-controls="sidebar-collapse-48">
                    -
                  </a>
                    <a href="48">1. Assignment and Local State</a>
                </h5>
              </div>
              <div id="sidebar-collapse-48" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-49">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-48" href="#sidebar-collapse-49" aria-expanded="false" aria-controls="sidebar-collapse-49">
                    <a href="49">1.         Local State Variables      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-50">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-48" href="#sidebar-collapse-50" aria-expanded="false" aria-controls="sidebar-collapse-50">
                    <a href="50">2.         The Benefits of Introducing Assignment      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-51">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-48" href="#sidebar-collapse-51" aria-expanded="false" aria-controls="sidebar-collapse-51">
                    <a href="51">3.         The Costs of Introducing Assignment      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-52">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-52" aria-expanded="true" aria-controls="sidebar-collapse-52">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-52" aria-expanded="true" aria-controls="sidebar-collapse-52">
                    -
                  </a>
                    <a href="52">2. The Environment Model of Evaluation</a>
                </h5>
              </div>
              <div id="sidebar-collapse-52" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-53">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-52" href="#sidebar-collapse-53" aria-expanded="false" aria-controls="sidebar-collapse-53">
                    <a href="53">1.         The Rules for Evaluation      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-54">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-52" href="#sidebar-collapse-54" aria-expanded="false" aria-controls="sidebar-collapse-54">
                    <a href="54">2.         Applying Simple        Functions      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-55">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-52" href="#sidebar-collapse-55" aria-expanded="false" aria-controls="sidebar-collapse-55">
                    <a href="55">3.         Frames as the Repository of Local State      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-56">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-52" href="#sidebar-collapse-56" aria-expanded="false" aria-controls="sidebar-collapse-56">
                    <a href="56">4.         Internal Definitions      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-57">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-57" aria-expanded="true" aria-controls="sidebar-collapse-57">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-57" aria-expanded="true" aria-controls="sidebar-collapse-57">
                    -
                  </a>
                    <a href="57">3. Modeling with Mutable Data</a>
                </h5>
              </div>
              <div id="sidebar-collapse-57" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-58">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-57" href="#sidebar-collapse-58" aria-expanded="false" aria-controls="sidebar-collapse-58">
                    <a href="58">1.         Mutable List Structure      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-59">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-57" href="#sidebar-collapse-59" aria-expanded="false" aria-controls="sidebar-collapse-59">
                    <a href="59">2.         Representing Queues      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-60">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-57" href="#sidebar-collapse-60" aria-expanded="false" aria-controls="sidebar-collapse-60">
                    <a href="60">3.         Representing Tables      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-61">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-57" href="#sidebar-collapse-61" aria-expanded="false" aria-controls="sidebar-collapse-61">
                    <a href="61">4.         A Simulator for Digital Circuits      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-62">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-57" href="#sidebar-collapse-62" aria-expanded="false" aria-controls="sidebar-collapse-62">
                    <a href="62">5.         Propagation of Constraints      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-63">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-63" aria-expanded="true" aria-controls="sidebar-collapse-63">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-63" aria-expanded="true" aria-controls="sidebar-collapse-63">
                    -
                  </a>
                    <a href="63">4. Concurrency: Time Is of the Essence</a>
                </h5>
              </div>
              <div id="sidebar-collapse-63" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-64">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-63" href="#sidebar-collapse-64" aria-expanded="false" aria-controls="sidebar-collapse-64">
                    <a href="64">1.         The Nature of Time in Concurrent Systems      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-65">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-63" href="#sidebar-collapse-65" aria-expanded="false" aria-controls="sidebar-collapse-65">
                    <a href="65">2.         Mechanisms for Controlling Concurrency      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-66">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-66" aria-expanded="true" aria-controls="sidebar-collapse-66">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-47" href="#sidebar-collapse-66" aria-expanded="true" aria-controls="sidebar-collapse-66">
                    -
                  </a>
                    <a href="66">5. Streams</a>
                </h5>
              </div>
              <div id="sidebar-collapse-66" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-67">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-66" href="#sidebar-collapse-67" aria-expanded="false" aria-controls="sidebar-collapse-67">
                    <a href="67">1.         Streams Are Delayed Lists      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-68">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-66" href="#sidebar-collapse-68" aria-expanded="false" aria-controls="sidebar-collapse-68">
                    <a href="68">2.         Infinite Streams      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-69">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-66" href="#sidebar-collapse-69" aria-expanded="false" aria-controls="sidebar-collapse-69">
                    <a href="69">3.   Exploiting the Stream Paradigm      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-70">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-66" href="#sidebar-collapse-70" aria-expanded="false" aria-controls="sidebar-collapse-70">
                    <a href="70">4.   Streams and Delayed Evaluation      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-71">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-66" href="#sidebar-collapse-71" aria-expanded="false" aria-controls="sidebar-collapse-71">
                    <a href="71">5.   Modularity of Functional Programs and Modularity of Objects      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                             <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-72">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-72" aria-expanded="true" aria-controls="sidebar-collapse-72">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-72" aria-expanded="true" aria-controls="sidebar-collapse-72">
                    -
                  </a>
                    <a href="72">4. Metalinguistic Abstraction</a>
                </h5>
              </div>
              <div id="sidebar-collapse-72" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-73">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-72" href="#sidebar-collapse-73" aria-expanded="true" aria-controls="sidebar-collapse-73">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-72" href="#sidebar-collapse-73" aria-expanded="true" aria-controls="sidebar-collapse-73">
                    -
                  </a>
                    <a href="73">1. The Metacircular Evaluator</a>
                </h5>
              </div>
              <div id="sidebar-collapse-73" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-74">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-73" href="#sidebar-collapse-74" aria-expanded="false" aria-controls="sidebar-collapse-74">
                    <a href="74">1.   The Core of the Evaluator      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-75">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-73" href="#sidebar-collapse-75" aria-expanded="false" aria-controls="sidebar-collapse-75">
                    <a href="75">2.   Representing Statements and Expressions      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-76">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-73" href="#sidebar-collapse-76" aria-expanded="false" aria-controls="sidebar-collapse-76">
                    <a href="76">3.   Evaluator Data Structures      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-77">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-73" href="#sidebar-collapse-77" aria-expanded="false" aria-controls="sidebar-collapse-77">
                    <a href="77">4.   Running the Evaluator as a Program      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-78">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-73" href="#sidebar-collapse-78" aria-expanded="false" aria-controls="sidebar-collapse-78">
                    <a href="78">5.   Data as Programs      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-79">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-73" href="#sidebar-collapse-79" aria-expanded="false" aria-controls="sidebar-collapse-79">
                    <a href="79">6.   Internal Definitions      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-80">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-73" href="#sidebar-collapse-80" aria-expanded="false" aria-controls="sidebar-collapse-80">
                    <a href="80">7.   Separating Syntactic Analysis from Execution      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-81">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-72" href="#sidebar-collapse-81" aria-expanded="true" aria-controls="sidebar-collapse-81">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-72" href="#sidebar-collapse-81" aria-expanded="true" aria-controls="sidebar-collapse-81">
                    -
                  </a>
                    <a href="81">2. Variations on a SchemeLazy Evaluation</a>
                </h5>
              </div>
              <div id="sidebar-collapse-81" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-82">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-81" href="#sidebar-collapse-82" aria-expanded="false" aria-controls="sidebar-collapse-82">
                    <a href="82">1.   Normal Order and Applicative Order      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-83">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-81" href="#sidebar-collapse-83" aria-expanded="false" aria-controls="sidebar-collapse-83">
                    <a href="83">2.   An Interpreter with Lazy Evaluation      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-84">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-81" href="#sidebar-collapse-84" aria-expanded="false" aria-controls="sidebar-collapse-84">
                    <a href="84">3.   Streams as Lazy Lists      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-85">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-72" href="#sidebar-collapse-85" aria-expanded="true" aria-controls="sidebar-collapse-85">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-72" href="#sidebar-collapse-85" aria-expanded="true" aria-controls="sidebar-collapse-85">
                    -
                  </a>
                    <a href="85">3. Variations on a SchemeNondeterministic Computing</a>
                </h5>
              </div>
              <div id="sidebar-collapse-85" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-86">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-85" href="#sidebar-collapse-86" aria-expanded="false" aria-controls="sidebar-collapse-86">
                    <a href="86">1.   Amb and Search      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-87">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-85" href="#sidebar-collapse-87" aria-expanded="false" aria-controls="sidebar-collapse-87">
                    <a href="87">2.   Examples of Nondeterministic Programs      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-88">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-85" href="#sidebar-collapse-88" aria-expanded="false" aria-controls="sidebar-collapse-88">
                    <a href="88">3.   Implementing the Amb Evaluator      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-89">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-72" href="#sidebar-collapse-89" aria-expanded="true" aria-controls="sidebar-collapse-89">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-72" href="#sidebar-collapse-89" aria-expanded="true" aria-controls="sidebar-collapse-89">
                    -
                  </a>
                    <a href="89">4. Logic Programming</a>
                </h5>
              </div>
              <div id="sidebar-collapse-89" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-90">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-89" href="#sidebar-collapse-90" aria-expanded="false" aria-controls="sidebar-collapse-90">
                    <a href="90">1.   Deductive Information Retrieval      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-91">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-89" href="#sidebar-collapse-91" aria-expanded="false" aria-controls="sidebar-collapse-91">
                    <a href="91">2.   How the Query System Works      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-92">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-89" href="#sidebar-collapse-92" aria-expanded="false" aria-controls="sidebar-collapse-92">
                    <a href="92">3.   Is Logic Programming Mathematical Logic?      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-93">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-89" href="#sidebar-collapse-93" aria-expanded="false" aria-controls="sidebar-collapse-93">
                    <a href="93">4.   Implementing the Query System      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

                             <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-94">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-94" aria-expanded="true" aria-controls="sidebar-collapse-94">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#nav-sidebar" href="#sidebar-collapse-94" aria-expanded="true" aria-controls="sidebar-collapse-94">
                    -
                  </a>
                    <a href="94">5. Computing with Register Machines</a>
                </h5>
              </div>
              <div id="sidebar-collapse-94" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-95">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-95" aria-expanded="true" aria-controls="sidebar-collapse-95">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-95" aria-expanded="true" aria-controls="sidebar-collapse-95">
                    -
                  </a>
                    <a href="95">1. Designing Register Machines</a>
                </h5>
              </div>
              <div id="sidebar-collapse-95" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-96">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-95" href="#sidebar-collapse-96" aria-expanded="false" aria-controls="sidebar-collapse-96">
                    <a href="96">1.   A Language for Describing Register Machines      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-97">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-95" href="#sidebar-collapse-97" aria-expanded="false" aria-controls="sidebar-collapse-97">
                    <a href="97">2.   Abstraction in Machine Design      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-98">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-95" href="#sidebar-collapse-98" aria-expanded="false" aria-controls="sidebar-collapse-98">
                    <a href="98">3.   Subroutines      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-99">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-95" href="#sidebar-collapse-99" aria-expanded="false" aria-controls="sidebar-collapse-99">
                    <a href="99">4.   Using a Stack to Implement Recursion      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-100">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-95" href="#sidebar-collapse-100" aria-expanded="false" aria-controls="sidebar-collapse-100">
                    <a href="100">5.   Instruction Summary      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-101">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-101" aria-expanded="true" aria-controls="sidebar-collapse-101">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-101" aria-expanded="true" aria-controls="sidebar-collapse-101">
                    -
                  </a>
                    <a href="101">2. A Register-Machine Simulator</a>
                </h5>
              </div>
              <div id="sidebar-collapse-101" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-102">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-101" href="#sidebar-collapse-102" aria-expanded="false" aria-controls="sidebar-collapse-102">
                    <a href="102">1.   The Machine Model      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-103">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-101" href="#sidebar-collapse-103" aria-expanded="false" aria-controls="sidebar-collapse-103">
                    <a href="103">2.   The Assembler      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-104">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-101" href="#sidebar-collapse-104" aria-expanded="false" aria-controls="sidebar-collapse-104">
                    <a href="104">3.   Generating Execution  Functions  for Instructions      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-105">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-101" href="#sidebar-collapse-105" aria-expanded="false" aria-controls="sidebar-collapse-105">
                    <a href="105">4.   Monitoring Machine Performance      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-106">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-106" aria-expanded="true" aria-controls="sidebar-collapse-106">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-106" aria-expanded="true" aria-controls="sidebar-collapse-106">
                    -
                  </a>
                    <a href="106">3. Storage Allocation and Garbage Collection</a>
                </h5>
              </div>
              <div id="sidebar-collapse-106" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-107">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-106" href="#sidebar-collapse-107" aria-expanded="false" aria-controls="sidebar-collapse-107">
                    <a href="107">1.   Memory as Vectors      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-108">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-106" href="#sidebar-collapse-108" aria-expanded="false" aria-controls="sidebar-collapse-108">
                    <a href="108">2.   Maintaining the Illusion of Infinite Memory      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-109">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-109" aria-expanded="true" aria-controls="sidebar-collapse-109">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-109" aria-expanded="true" aria-controls="sidebar-collapse-109">
                    -
                  </a>
                    <a href="109">4. The Explicit-Control Evaluator</a>
                </h5>
              </div>
              <div id="sidebar-collapse-109" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-110">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-109" href="#sidebar-collapse-110" aria-expanded="false" aria-controls="sidebar-collapse-110">
                    <a href="110">1.   The Core of the Explicit-Control Evaluator      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-111">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-109" href="#sidebar-collapse-111" aria-expanded="false" aria-controls="sidebar-collapse-111">
                    <a href="111">2.   Sequence Evaluation and Tail Recursion      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-112">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-109" href="#sidebar-collapse-112" aria-expanded="false" aria-controls="sidebar-collapse-112">
                    <a href="112">3.   Conditionals, Assignments, and Definitions      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-113">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-109" href="#sidebar-collapse-113" aria-expanded="false" aria-controls="sidebar-collapse-113">
                    <a href="113">4.   Running the Evaluator      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-114">
                <h5 class="mb-0">
                  <a class="sidebar-show collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-114" aria-expanded="true" aria-controls="sidebar-collapse-114">
                    +
                  </a>
                  <a class="sidebar-hide collapsed" data-toggle="collapse" data-parent="#sidebar-94" href="#sidebar-collapse-114" aria-expanded="true" aria-controls="sidebar-collapse-114">
                    -
                  </a>
                    <a href="114">5. Compilation</a>
                </h5>
              </div>
              <div id="sidebar-collapse-114" class="collapse" role="tabpanel" aria-labelledby="headingOne">
                <div class="card-block">
                                <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-115">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-114" href="#sidebar-collapse-115" aria-expanded="false" aria-controls="sidebar-collapse-115">
                    <a href="115">1.   Structure of the Compiler      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-116">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-114" href="#sidebar-collapse-116" aria-expanded="false" aria-controls="sidebar-collapse-116">
                    <a href="116">2.   Compiling Expressions      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-117">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-114" href="#sidebar-collapse-117" aria-expanded="false" aria-controls="sidebar-collapse-117">
                    <a href="117">3.   Compiling Combinations      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-118">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-114" href="#sidebar-collapse-118" aria-expanded="false" aria-controls="sidebar-collapse-118">
                    <a href="118">4.   Combining Instruction Sequences      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-119">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-114" href="#sidebar-collapse-119" aria-expanded="false" aria-controls="sidebar-collapse-119">
                    <a href="119">5.   An Example of Compiled Code      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-120">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-114" href="#sidebar-collapse-120" aria-expanded="false" aria-controls="sidebar-collapse-120">
                    <a href="120">6.   Lexical Addressing      </a>
                  </a>
                </h5>
              </div>
            </div>
            <div class="card card-inverse">
              <div class="card-header" role="tab" id="sidebar-121">
                <h5 class="mb-0">
                  <a class="collapsed" data-toggle="collapse" data-parent="#sidebar-114" href="#sidebar-collapse-121" aria-expanded="false" aria-controls="sidebar-collapse-121">
                    <a href="121">7.   Interfacing Compiled Code to the Evaluator      </a>
                  </a>
                </h5>
              </div>
            </div>

                </div>
              </div>
            </div>

                </div>
              </div>
            </div>

          </div>

           <div class="chapter-content">
    <div class="chapter-title">
        4.1.1.
  The Core of the Evaluator
      
    </div>
    <div class="chapter-text" >
        <div class="SUBSECTION"><SUBSECTION>
      

      <p>
  
  

  <img src="img_original/ch4-Z-G-1.gif">

  The evaluation process can be described as the interplay between two
  functions: 
  <kbd>evaluate</kbd> and <kbd>apply</kbd>.
      </p>

      <h2>
  
      
      The function 
        <kbd>evaluate</kbd>
  
      </h2>

      <p>
  
  
    
    The function <kbd>evaluate</kbd>
  
  takes as arguments 
  a statement 
  and an environment.  It  classifies the 
  statement 
  and directs its evaluation.  
  
    
    The function <kbd>evaluate</kbd>
  
  is structured as a case analysis of the syntactic type of the expression
  to be evaluated.  In order to keep the
  function
  general, we express
  the determination of the type of 
  a statement
  abstractly, making no
  commitment to any particular 
  
  representation for the various types of
  statements.  
  Each type of 
  statement
  has a predicate that tests for
  it and an abstract means for selecting its parts.  This 
  
  
  <EM>abstract
    syntax</EM> makes it easy to see how we can change the syntax of the
  language by using the same evaluator, but with a different collection of
  syntax
  functions.
      </p>

      <SUBSUBSUBSECTION>
  Primitive expressions

  <SPLIT>
    
    
      <p>
        <UL>
    <LI>
      
      
      If the given statement is a self-evaluating expression,
      such as a number, 
      <kbd>evaluate</kbd>
      returns the expression itself.
    </LI>
    <LI>
      The function <kbd>evaluate</kbd>
      must look up variables in the environment to find their values.
    </LI>
        </UL>
      </p>
    
  </SPLIT>
      </SUBSUBSUBSECTION>

      <SUBSUBSUBSECTION>
  Special forms

  <SPLIT>
    
    
      <p>
        <UL>
    <LI>
      An assignment to (or a definition of) a variable must recursively call
      <kbd>evaluate</kbd>
      to compute the new value to be associated with the
      variable.  The environment must be modified to change (or create) the
      binding of the variable.
    </LI>
    <LI>
      An <kbd>if</kbd> statement 
      requires special processing of its parts, so as to
      evaluate the consequent if the predicate is true, and otherwise to
      evaluate the alternative.
    </LI>
    <LI>
      A function definition must be transformed into an applicable
      function by packaging together the parameters and body
      specified by the <kbd>lambda</kbd> expression with 
      the environment of the evaluation.
    </LI>
    <LI>
      A sequence of statements requires evaluating its 
      component statements in the order in which they appear.
    </LI>
        </UL>
      </p>
    
  </SPLIT>

      </SUBSUBSUBSECTION>

      <SUBSUBSUBSECTION>
  Combinations

  <SPLIT>
    
    
      <p>
        <UL>
    <LI>
      For a
      function
      application, 
      <kbd>evaluate</kbd>
      must recursively
      evaluate the operator part and the operands of the combination.  The
      resulting
      function
      and arguments are passed to <kbd>apply</kbd>, which
      handles the actual function application.
    </LI>
    <LI>
      When <kbd>evaluate</kbd>
      encounters a <kbd>return</kbd>
      statement, the <kbd>return</kbd>
      expression is evaluated and marked as a return value.
    </LI>
        </UL>
      </p>
    
  </SPLIT>
      </SUBSUBSUBSECTION>

      <p>
  
  Here is the definition of
  <kbd>evaluate</kbd>:

  <div class="snippet" id="javascript_74_0_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('function evaluate(stmt,env) {\n   if (is_self_evaluating(stmt)) \n      return stmt;\n   else if (is_variable(stmt)) \n      return lookup_variable_value(variable_name(stmt),env);\n   else if (is_assignment(stmt)) \n      return evaluate_assignment(stmt,env);\n   else if (is_var_definition(stmt)) \n      return evaluate_var_definition(stmt,env);\n   else if (is_if_statement(stmt))\n      return evaluate_if_statement(stmt,env);\n   else if (is_function_definition(stmt))\n      return evaluate_function_definition(stmt,env);\n   else if (is_sequence(stmt))\n      return evaluate_sequence(stmt,env);\n   else if (is_application(stmt))\n      return apply(evaluate(operator(stmt),env),\n                   list_of_values(operands(stmt),env));\n   else if (is_return_statement(stmt))\n      return make_return_value(\n                evaluate(return_statement_expression(stmt),\n                         env));\n   else error(&quot;Unknown expression type - - evaluate: &quot;,stmt);\n}','javascript_74_0','', event,1.0);window.eval('function is_tagged_object(stmt,the_tag){return typeof stmt===&quot;object&quot;&amp;&amp;stmt.tag===the_tag};function is_self_evaluating(stmt){return stmt===[]||typeof stmt===&quot;number&quot;||typeof stmt===&quot;string&quot;||typeof stmt===&quot;boolean&quot;};function is_variable(stmt){return is_tagged_object(stmt,&quot;variable&quot;)}function variable_name(stmt){return stmt.name};function enclosing_environment(env){return tail(env)}function first_frame(env){return head(env)}var the_empty_environment=[];var an_empty_frame={};function is_empty_environment(env){return is_empty_list(env)}function enclose_by(frame,env){return pair(frame,env)};function lookup_variable_value(variable,env){function env_loop(env){if(is_empty_environment(env)){error(&quot;Unbound variable: &quot;,variable)}else{if(has_binding_in_frame(variable,first_frame(env))){return first_frame(env)[variable]}else{return env_loop(enclosing_environment(env))}}}return env_loop(env)};function is_assignment(stmt){return is_tagged_object(stmt,&quot;assignment&quot;)}function assignment_variable(stmt){return stmt.variable}function assignment_value(stmt){return stmt.value};function enclosing_environment(env){return tail(env)}function first_frame(env){return head(env)}var the_empty_environment=[];var an_empty_frame={};function is_empty_environment(env){return is_empty_list(env)}function enclose_by(frame,env){return pair(frame,env)};function set_variable_value(variable,value,env){function env_loop(env){if(is_empty_environment(env)){error(&quot;Unbound variable - - assignment: &quot;,variable)}else{if(has_binding_in_frame(variable,first_frame(env))){add_binding_to_frame(variable,value,first_frame(env))}else{env_loop(enclosing_environment(env))}}}env_loop(env);return};function evaluate_assignment(stmt,env){var value=evaluate(assignment_value(stmt),env);set_variable_value(assignment_variable(stmt),value,env);return value};function is_var_definition(stmt){return is_tagged_object(stmt,&quot;var_definition&quot;)}function var_definition_variable(stmt){return stmt.variable}function var_definition_value(stmt){return stmt.value};function make_frame(variables,values){if(is_empty_list(variables)&amp;&amp;is_empty_list(values)){return{}}else{var frame=make_frame(tail(variables),tail(values));frame[head(variables)]=head(values);return frame}}function add_binding_to_frame(variable,value,frame){frame[variable]=value;return}function has_binding_in_frame(variable,frame){return frame.hasOwnProperty(variable)};function define_variable(variable,value,env){var frame=first_frame(env);return add_binding_to_frame(variable,value,frame)};function evaluate_var_definition(stmt,env){define_variable(var_definition_variable(stmt),evaluate(var_definition_value(stmt),env),env);return undefined};function is_if_statement(stmt){return is_tagged_object(stmt,&quot;if&quot;)}function if_predicate(stmt){return stmt.predicate}function if_consequent(stmt){return stmt.consequent}function if_alternative(stmt){return stmt.alternative};function is_true(x){return !is_false(x)}function is_false(x){return x===false||x===0||x===&quot;&quot;||x===undefined||x===NaN};function evaluate_if_statement(stmt,env){if(is_true(evaluate(if_predicate(stmt),env))){return evaluate(if_consequent(stmt),env)}else{return evaluate(if_alternative(stmt),env)}};function is_function_definition(stmt){return is_tagged_object(stmt,&quot;function_definition&quot;)}function function_definition_parameters(stmt){return stmt.parameters}function function_definition_body(stmt){return stmt.body};function evaluate_function_definition(stmt,env){return make_function_value(function_definition_parameters(stmt),function_definition_body(stmt),env)}function make_function_value(parameters,body,env){return{tag:&quot;function_value&quot;,parameters:parameters,body:body,environment:env}}function is_compound_function_value(f){return is_tagged_object(f,&quot;function_value&quot;)}function function_value_parameters(value){return value.parameters}function function_value_body(value){return value.body}function function_value_environment(value){return value.environment};function is_sequence(stmt){return is_list(stmt)}function is_last_statement(stmts){return is_empty_list(tail(stmts))}function first_statement(stmts){return head(stmts)}function rest_statements(stmts){return tail(stmts)};function evaluate_sequence(stmts,env){if(is_last_statement(stmts)){return evaluate(first_statement(stmts),env)}else{var first_stmt_value=evaluate(first_statement(stmts),env);if(is_return_value(first_stmt_value)){return first_stmt_value}else{return evaluate_sequence(rest_statements(stmts),env)}}};function is_application(stmt){return is_tagged_object(stmt,&quot;application&quot;)}function operator(stmt){return stmt.operator}function operands(stmt){return stmt.operands}function no_operands(ops){return is_empty_list(ops)}function first_operand(ops){return head(ops)}function rest_operands(ops){return tail(ops)};function is_primitive_function(fun){return is_tagged_object(fun,&quot;primitive&quot;)}function primitive_implementation(fun){return fun.implementation};function apply_in_underlying_javascript(prim,argument_list){var argument_array=new Array();var i=0;while(!is_empty_list(argument_list)){argument_array[i++]=head(argument_list);argument_list=tail(argument_list)}return prim.apply(prim,argument_array)};function is_primitive_function(fun){return is_tagged_object(fun,&quot;primitive&quot;)}function primitive_implementation(fun){return fun.implementation};function apply_primitive_function(fun,argument_list){return apply_in_underlying_javascript(primitive_implementation(fun),argument_list)};function make_frame(variables,values){if(is_empty_list(variables)&amp;&amp;is_empty_list(values)){return{}}else{var frame=make_frame(tail(variables),tail(values));frame[head(variables)]=head(values);return frame}}function add_binding_to_frame(variable,value,frame){frame[variable]=value;return}function has_binding_in_frame(variable,frame){return frame.hasOwnProperty(variable)};function extend_environment(vars,vals,base_env){if(length(vars)===length(vals)){return enclose_by(make_frame(vars,vals),base_env)}else{if(length(vars)&lt;length(vals)){error(&quot;Too many arguments supplied: &quot;,vars,vals)}else{error(&quot;Too few arguments supplied: &quot;,vars,vals)}}};function is_return_statement(stmt){return is_tagged_object(stmt,&quot;return_statement&quot;)}function return_statement_expression(stmt){return stmt.expression};function make_return_value(content){return{tag:&quot;return_value&quot;,content:content}}function is_return_value(value){return is_tagged_object(value,&quot;return_value&quot;)}function return_value_content(value){return value.content};function apply(fun,arguments){if(is_primitive_function(fun)){return apply_primitive_function(fun,arguments)}else{if(is_compound_function_value(fun)){var result=evaluate(function_value_body(fun),extend_environment(function_value_parameters(fun),arguments,function_value_environment(fun)));if(is_return_value(result)){return return_value_content(result)}else{return undefined}}else{error(&quot;Unknown function type - - APPLY: &quot;,fun)}}};function list_of_values(exps,env){if(no_operands(exps)){return[]}else{return pair(evaluate(first_operand(exps),env),list_of_values(rest_operands(exps),env))}};var primitive_functions={pair:pair,head:head,tail:tail,list:list,is_empty_list:is_empty_list,length:length,display:display,print:print,newline:newline,runtime:runtime,error:error,&quot;+&quot;:function(x,y){return x+y},&quot;-&quot;:function(x,y){return x-y},&quot;*&quot;:function(x,y){return x*y},&quot;/&quot;:function(x,y){return x/y},&quot;%&quot;:function(x,y){return x%y},&quot;===&quot;:function(x,y){return x===y},&quot;!==&quot;:function(x,y){return x!==y},&quot;&lt;&quot;:function(x,y){return x&lt;y},&quot;&lt;=&quot;:function(x,y){return x&lt;=y},&quot;!&quot;:function(x){return !x},&quot;&amp;&amp;&quot;:function(x,y){return x&amp;&amp;y},&quot;||&quot;:function(x,y){return x||y}};function make_frame(variables,values){if(is_empty_list(variables)&amp;&amp;is_empty_list(values)){return{}}else{var frame=make_frame(tail(variables),tail(values));frame[head(variables)]=head(values);return frame}}function add_binding_to_frame(variable,value,frame){frame[variable]=value;return}function has_binding_in_frame(variable,frame){return frame.hasOwnProperty(variable)};function define_variable(variable,value,env){var frame=first_frame(env);return add_binding_to_frame(variable,value,frame)};function enclosing_environment(env){return tail(env)}function first_frame(env){return head(env)}var the_empty_environment=[];var an_empty_frame={};function is_empty_environment(env){return is_empty_list(env)}function enclose_by(frame,env){return pair(frame,env)};function setup_environment(){var initial_env=enclose_by(an_empty_frame,the_empty_environment);for(var prop in primitive_functions){define_variable(prop,{tag:&quot;primitive&quot;,implementation:primitive_functions[prop]},initial_env)}define_variable(&quot;undefined&quot;,undefined,initial_env);return initial_env};function evaluate_toplevel(stmt,env){var value=evaluate(stmt,env);if(is_return_value(value)){error(&quot;return not allowed outside of function definition&quot;)}else{return value}}var input_prompt=&quot;/// M-Eval input:&quot;;function prompt_and_parse(){var program_string=prompt(input_prompt);if(program_string===null){return{tag:&quot;exit&quot;}}else{return parser.parse(program_string)}};');">function evaluate(stmt,env) {
   if (is_self_evaluating(stmt)) 
      return stmt;
   else if (is_variable(stmt)) 
      return lookup_variable_value(variable_name(stmt),env);
   else if (is_assignment(stmt)) 
      return evaluate_assignment(stmt,env);
   else if (is_var_definition(stmt)) 
      return evaluate_var_definition(stmt,env);
   else if (is_if_statement(stmt))
      return evaluate_if_statement(stmt,env);
   else if (is_function_definition(stmt))
      return evaluate_function_definition(stmt,env);
   else if (is_sequence(stmt))
      return evaluate_sequence(stmt,env);
   else if (is_application(stmt))
      return apply(evaluate(operator(stmt),env),
                   list_of_values(operands(stmt),env));
   else if (is_return_statement(stmt))
      return make_return_value(
                evaluate(return_statement_expression(stmt),
                         env));
   else error("Unknown expression type - - evaluate: ",stmt);
}</pre>
<a href="http://source-ide-new.surge.sh/?snippet=function%20evaluate(stmt,env)%20%7B%0A%20%20%20if%20(is_self_evaluating(stmt))%20%0A%20%20%20%20%20%20return%20stmt;%0A%20%20%20else%20if%20(is_variable(stmt))%20%0A%20%20%20%20%20%20return%20lookup_variable_value(variable_name(stmt),env);%0A%20%20%20else%20if%20(is_assignment(stmt))%20%0A%20%20%20%20%20%20return%20evaluate_assignment(stmt,env);%0A%20%20%20else%20if%20(is_var_definition(stmt))%20%0A%20%20%20%20%20%20return%20evaluate_var_definition(stmt,env);%0A%20%20%20else%20if%20(is_if_statement(stmt))%0A%20%20%20%20%20%20return%20evaluate_if_statement(stmt,env);%0A%20%20%20else%20if%20(is_function_definition(stmt))%0A%20%20%20%20%20%20return%20evaluate_function_definition(stmt,env);%0A%20%20%20else%20if%20(is_sequence(stmt))%0A%20%20%20%20%20%20return%20evaluate_sequence(stmt,env);%0A%20%20%20else%20if%20(is_application(stmt))%0A%20%20%20%20%20%20return%20apply(evaluate(operator(stmt),env),%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20list_of_values(operands(stmt),env));%0A%20%20%20else%20if%20(is_return_statement(stmt))%0A%20%20%20%20%20%20return%20make_return_value(%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20evaluate(return_statement_expression(stmt),%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20env));%0A%20%20%20else%20error(%22Unknown%20expression%20type%20-%20-%20evaluate:%20%22,stmt);%0A%7D&amp;hidden=function%20is_tagged_object(stmt,the_tag)%7Breturn%20typeof%20stmt===%22object%22&amp;amp;&amp;amp;stmt.tag===the_tag%7D;function%20is_self_evaluating(stmt)%7Breturn%20stmt===%5B%5D%7C%7Ctypeof%20stmt===%22number%22%7C%7Ctypeof%20stmt===%22string%22%7C%7Ctypeof%20stmt===%22boolean%22%7D;function%20is_variable(stmt)%7Breturn%20is_tagged_object(stmt,%22variable%22)%7Dfunction%20variable_name(stmt)%7Breturn%20stmt.name%7D;function%20enclosing_environment(env)%7Breturn%20tail(env)%7Dfunction%20first_frame(env)%7Breturn%20head(env)%7Dvar%20the_empty_environment=%5B%5D;var%20an_empty_frame=%7B%7D;function%20is_empty_environment(env)%7Breturn%20is_empty_list(env)%7Dfunction%20enclose_by(frame,env)%7Breturn%20pair(frame,env)%7D;function%20lookup_variable_value(variable,env)%7Bfunction%20env_loop(env)%7Bif(is_empty_environment(env))%7Berror(%22Unbound%20variable:%20%22,variable)%7Delse%7Bif(has_binding_in_frame(variable,first_frame(env)))%7Breturn%20first_frame(env)%5Bvariable%5D%7Delse%7Breturn%20env_loop(enclosing_environment(env))%7D%7D%7Dreturn%20env_loop(env)%7D;function%20is_assignment(stmt)%7Breturn%20is_tagged_object(stmt,%22assignment%22)%7Dfunction%20assignment_variable(stmt)%7Breturn%20stmt.variable%7Dfunction%20assignment_value(stmt)%7Breturn%20stmt.value%7D;function%20enclosing_environment(env)%7Breturn%20tail(env)%7Dfunction%20first_frame(env)%7Breturn%20head(env)%7Dvar%20the_empty_environment=%5B%5D;var%20an_empty_frame=%7B%7D;function%20is_empty_environment(env)%7Breturn%20is_empty_list(env)%7Dfunction%20enclose_by(frame,env)%7Breturn%20pair(frame,env)%7D;function%20set_variable_value(variable,value,env)%7Bfunction%20env_loop(env)%7Bif(is_empty_environment(env))%7Berror(%22Unbound%20variable%20-%20-%20assignment:%20%22,variable)%7Delse%7Bif(has_binding_in_frame(variable,first_frame(env)))%7Badd_binding_to_frame(variable,value,first_frame(env))%7Delse%7Benv_loop(enclosing_environment(env))%7D%7D%7Denv_loop(env);return%7D;function%20evaluate_assignment(stmt,env)%7Bvar%20value=evaluate(assignment_value(stmt),env);set_variable_value(assignment_variable(stmt),value,env);return%20value%7D;function%20is_var_definition(stmt)%7Breturn%20is_tagged_object(stmt,%22var_definition%22)%7Dfunction%20var_definition_variable(stmt)%7Breturn%20stmt.variable%7Dfunction%20var_definition_value(stmt)%7Breturn%20stmt.value%7D;function%20make_frame(variables,values)%7Bif(is_empty_list(variables)&amp;amp;&amp;amp;is_empty_list(values))%7Breturn%7B%7D%7Delse%7Bvar%20frame=make_frame(tail(variables),tail(values));frame%5Bhead(variables)%5D=head(values);return%20frame%7D%7Dfunction%20add_binding_to_frame(variable,value,frame)%7Bframe%5Bvariable%5D=value;return%7Dfunction%20has_binding_in_frame(variable,frame)%7Breturn%20frame.hasOwnProperty(variable)%7D;function%20define_variable(variable,value,env)%7Bvar%20frame=first_frame(env);return%20add_binding_to_frame(variable,value,frame)%7D;function%20evaluate_var_definition(stmt,env)%7Bdefine_variable(var_definition_variable(stmt),evaluate(var_definition_value(stmt),env),env);return%20undefined%7D;function%20is_if_statement(stmt)%7Breturn%20is_tagged_object(stmt,%22if%22)%7Dfunction%20if_predicate(stmt)%7Breturn%20stmt.predicate%7Dfunction%20if_consequent(stmt)%7Breturn%20stmt.consequent%7Dfunction%20if_alternative(stmt)%7Breturn%20stmt.alternative%7D;function%20is_true(x)%7Breturn%20!is_false(x)%7Dfunction%20is_false(x)%7Breturn%20x===false%7C%7Cx===0%7C%7Cx===%22%22%7C%7Cx===undefined%7C%7Cx===NaN%7D;function%20evaluate_if_statement(stmt,env)%7Bif(is_true(evaluate(if_predicate(stmt),env)))%7Breturn%20evaluate(if_consequent(stmt),env)%7Delse%7Breturn%20evaluate(if_alternative(stmt),env)%7D%7D;function%20is_function_definition(stmt)%7Breturn%20is_tagged_object(stmt,%22function_definition%22)%7Dfunction%20function_definition_parameters(stmt)%7Breturn%20stmt.parameters%7Dfunction%20function_definition_body(stmt)%7Breturn%20stmt.body%7D;function%20evaluate_function_definition(stmt,env)%7Breturn%20make_function_value(function_definition_parameters(stmt),function_definition_body(stmt),env)%7Dfunction%20make_function_value(parameters,body,env)%7Breturn%7Btag:%22function_value%22,parameters:parameters,body:body,environment:env%7D%7Dfunction%20is_compound_function_value(f)%7Breturn%20is_tagged_object(f,%22function_value%22)%7Dfunction%20function_value_parameters(value)%7Breturn%20value.parameters%7Dfunction%20function_value_body(value)%7Breturn%20value.body%7Dfunction%20function_value_environment(value)%7Breturn%20value.environment%7D;function%20is_sequence(stmt)%7Breturn%20is_list(stmt)%7Dfunction%20is_last_statement(stmts)%7Breturn%20is_empty_list(tail(stmts))%7Dfunction%20first_statement(stmts)%7Breturn%20head(stmts)%7Dfunction%20rest_statements(stmts)%7Breturn%20tail(stmts)%7D;function%20evaluate_sequence(stmts,env)%7Bif(is_last_statement(stmts))%7Breturn%20evaluate(first_statement(stmts),env)%7Delse%7Bvar%20first_stmt_value=evaluate(first_statement(stmts),env);if(is_return_value(first_stmt_value))%7Breturn%20first_stmt_value%7Delse%7Breturn%20evaluate_sequence(rest_statements(stmts),env)%7D%7D%7D;function%20is_application(stmt)%7Breturn%20is_tagged_object(stmt,%22application%22)%7Dfunction%20operator(stmt)%7Breturn%20stmt.operator%7Dfunction%20operands(stmt)%7Breturn%20stmt.operands%7Dfunction%20no_operands(ops)%7Breturn%20is_empty_list(ops)%7Dfunction%20first_operand(ops)%7Breturn%20head(ops)%7Dfunction%20rest_operands(ops)%7Breturn%20tail(ops)%7D;function%20is_primitive_function(fun)%7Breturn%20is_tagged_object(fun,%22primitive%22)%7Dfunction%20primitive_implementation(fun)%7Breturn%20fun.implementation%7D;function%20apply_in_underlying_javascript(prim,argument_list)%7Bvar%20argument_array=new%20Array();var%20i=0;while(!is_empty_list(argument_list))%7Bargument_array%5Bi++%5D=head(argument_list);argument_list=tail(argument_list)%7Dreturn%20prim.apply(prim,argument_array)%7D;function%20is_primitive_function(fun)%7Breturn%20is_tagged_object(fun,%22primitive%22)%7Dfunction%20primitive_implementation(fun)%7Breturn%20fun.implementation%7D;function%20apply_primitive_function(fun,argument_list)%7Breturn%20apply_in_underlying_javascript(primitive_implementation(fun),argument_list)%7D;function%20make_frame(variables,values)%7Bif(is_empty_list(variables)&amp;amp;&amp;amp;is_empty_list(values))%7Breturn%7B%7D%7Delse%7Bvar%20frame=make_frame(tail(variables),tail(values));frame%5Bhead(variables)%5D=head(values);return%20frame%7D%7Dfunction%20add_binding_to_frame(variable,value,frame)%7Bframe%5Bvariable%5D=value;return%7Dfunction%20has_binding_in_frame(variable,frame)%7Breturn%20frame.hasOwnProperty(variable)%7D;function%20extend_environment(vars,vals,base_env)%7Bif(length(vars)===length(vals))%7Breturn%20enclose_by(make_frame(vars,vals),base_env)%7Delse%7Bif(length(vars)" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>

  

      </p>

      <p>
  
  
  For clarity, 
  <kbd>evaluate</kbd> has been implemented as a case analysis using
  <kbd>if</kbd>.  The disadvantage of this is that our
  function
  handles
  only a few distinguishable types of 
  statements,
  and no new ones can be defined without editing the definition of 
  <kbd>evaluate</kbd>.  
  In most interpreter
  implementations, dispatching on the type of an expression is done in a
  data-directed style.  This allows a user to add new types of
  expressions that 
  <kbd>evaluate</kbd>
  can distinguish, without modifying the definition of 
  <kbd>evaluate</kbd> itself.
  (See Exercise <REF NAME="ex:data-directed-eval"></REF>.)
      </p>

      <h2>
  Apply
      </h2>

      <p>
  
    The function <kbd>apply</kbd>
  
  takes two arguments, a
  function
  and a list of arguments  to which the
  function
  should be applied.  
  
    The function <kbd>apply</kbd>
  
  classifies
  functions
  into two kinds: It calls 
  
  
    <kbd>apply_primitive_function</kbd>
  
  to apply primitives; it applies compound
  functions
  by sequentially evaluating the expressions that
  make up the body of the
  function.  
  The environment for the
  evaluation of the body of a compound
  function
  is constructed by extending the base environment carried by
  the
  function
  to include a frame that binds the parameters of the
  function
  to the arguments to which the
  function
  is to be applied.
  Here is the definition of <kbd>apply</kbd>:

  <div class="snippet" id="javascript_74_1_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('function apply(fun,arguments) {\n   if (is_primitive_function(fun))\n      return apply_primitive_function(fun,arguments);\n   else if (is_compound_function_value(fun)) {\n      var result =\n         evaluate(function_value_body(fun),\n                  extend_environment(function_value_parameters(fun),\n                                     arguments,\n                                     function_value_environment(fun)));\n      if (is_return_value(result)) \n         return return_value_content(result);\n      else return undefined;\n   } else error(&quot;Unknown function type - - APPLY: &quot;,fun);\n}','javascript_74_1','', event,1.0);window.eval('function is_primitive_function(fun){return is_tagged_object(fun,&quot;primitive&quot;)}function primitive_implementation(fun){return fun.implementation};function apply_in_underlying_javascript(prim,argument_list){var argument_array=new Array();var i=0;while(!is_empty_list(argument_list)){argument_array[i++]=head(argument_list);argument_list=tail(argument_list)}return prim.apply(prim,argument_array)};function is_primitive_function(fun){return is_tagged_object(fun,&quot;primitive&quot;)}function primitive_implementation(fun){return fun.implementation};function apply_primitive_function(fun,argument_list){return apply_in_underlying_javascript(primitive_implementation(fun),argument_list)};function make_frame(variables,values){if(is_empty_list(variables)&amp;&amp;is_empty_list(values)){return{}}else{var frame=make_frame(tail(variables),tail(values));frame[head(variables)]=head(values);return frame}}function add_binding_to_frame(variable,value,frame){frame[variable]=value;return}function has_binding_in_frame(variable,frame){return frame.hasOwnProperty(variable)};function extend_environment(vars,vals,base_env){if(length(vars)===length(vals)){return enclose_by(make_frame(vars,vals),base_env)}else{if(length(vars)&lt;length(vals)){error(&quot;Too many arguments supplied: &quot;,vars,vals)}else{error(&quot;Too few arguments supplied: &quot;,vars,vals)}}};function is_return_statement(stmt){return is_tagged_object(stmt,&quot;return_statement&quot;)}function return_statement_expression(stmt){return stmt.expression};function make_return_value(content){return{tag:&quot;return_value&quot;,content:content}}function is_return_value(value){return is_tagged_object(value,&quot;return_value&quot;)}function return_value_content(value){return value.content};');">function apply(fun,arguments) {
   if (is_primitive_function(fun))
      return apply_primitive_function(fun,arguments);
   else if (is_compound_function_value(fun)) {
      var result =
         evaluate(function_value_body(fun),
                  extend_environment(function_value_parameters(fun),
                                     arguments,
                                     function_value_environment(fun)));
      if (is_return_value(result)) 
         return return_value_content(result);
      else return undefined;
   } else error("Unknown function type - - APPLY: ",fun);
}</pre>
<a href="http://source-ide-new.surge.sh/?snippet=function%20apply(fun,arguments)%20%7B%0A%20%20%20if%20(is_primitive_function(fun))%0A%20%20%20%20%20%20return%20apply_primitive_function(fun,arguments);%0A%20%20%20else%20if%20(is_compound_function_value(fun))%20%7B%0A%20%20%20%20%20%20var%20result%20=%0A%20%20%20%20%20%20%20%20%20evaluate(function_value_body(fun),%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20extend_environment(function_value_parameters(fun),%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20arguments,%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20function_value_environment(fun)));%0A%20%20%20%20%20%20if%20(is_return_value(result))%20%0A%20%20%20%20%20%20%20%20%20return%20return_value_content(result);%0A%20%20%20%20%20%20else%20return%20undefined;%0A%20%20%20%7D%20else%20error(%22Unknown%20function%20type%20-%20-%20APPLY:%20%22,fun);%0A%7D&amp;hidden=function%20is_primitive_function(fun)%7Breturn%20is_tagged_object(fun,%22primitive%22)%7Dfunction%20primitive_implementation(fun)%7Breturn%20fun.implementation%7D;function%20apply_in_underlying_javascript(prim,argument_list)%7Bvar%20argument_array=new%20Array();var%20i=0;while(!is_empty_list(argument_list))%7Bargument_array%5Bi++%5D=head(argument_list);argument_list=tail(argument_list)%7Dreturn%20prim.apply(prim,argument_array)%7D;function%20is_primitive_function(fun)%7Breturn%20is_tagged_object(fun,%22primitive%22)%7Dfunction%20primitive_implementation(fun)%7Breturn%20fun.implementation%7D;function%20apply_primitive_function(fun,argument_list)%7Breturn%20apply_in_underlying_javascript(primitive_implementation(fun),argument_list)%7D;function%20make_frame(variables,values)%7Bif(is_empty_list(variables)&amp;amp;&amp;amp;is_empty_list(values))%7Breturn%7B%7D%7Delse%7Bvar%20frame=make_frame(tail(variables),tail(values));frame%5Bhead(variables)%5D=head(values);return%20frame%7D%7Dfunction%20add_binding_to_frame(variable,value,frame)%7Bframe%5Bvariable%5D=value;return%7Dfunction%20has_binding_in_frame(variable,frame)%7Breturn%20frame.hasOwnProperty(variable)%7D;function%20extend_environment(vars,vals,base_env)%7Bif(length(vars)===length(vals))%7Breturn%20enclose_by(make_frame(vars,vals),base_env)%7Delse%7Bif(length(vars)" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
  
    
    
    In order to return a value, JavaScript functions need to evaluate a return 
    statement. If a function terminates without return, the value 
    <kbd>undefined</kbd>
    is returned. Thus, if the evaluation of the function body yields a return
    value, the corresponding return expression is returned, and otherwise the
    value <kbd>undefined</kbd> is returned.
    
  
      </p>

      <h2>
  Function
    arguments
      </h2>

      <p>
  When 
  <kbd>evaluate</kbd>
  processes a
  function
  application, it uses 
  <kbd>list_of_values</kbd>
  to produce the
  list of arguments to which the
  function
  is to be applied. The function <kbd>list_of_values</kbd> takes as an argument 
  the operands of the combination.
  It evaluates each operand and returns a list of the corresponding
  values:<a class="superscript" id="footnote-link-1" href="74#footnote-1">[1]</a>

  <div class="snippet" id="javascript_74_2_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('function list_of_values(exps,env) {\n   if (no_operands(exps)) return [];\n   else return pair(evaluate(first_operand(exps),env),\n                    list_of_values(rest_operands(exps),env));\n}','javascript_74_2','', event,1.0);window.eval('');">function list_of_values(exps,env) {
   if (no_operands(exps)) return [];
   else return pair(evaluate(first_operand(exps),env),
                    list_of_values(rest_operands(exps),env));
}</pre>
<a href="http://source-ide-new.surge.sh/?snippet=function%20list_of_values(exps,env)%20%7B%0A%20%20%20if%20(no_operands(exps))%20return%20%5B%5D;%0A%20%20%20else%20return%20pair(evaluate(first_operand(exps),env),%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20list_of_values(rest_operands(exps),env));%0A%7D&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <h2>
  Conditionals
      </h2>

      <p>
  The function <kbd>evaluate_if_statement</kbd>
  evaluates the predicate part of an conditional statement in the given environment.  If
  the result is true, 
  <kbd>evaluate_if_statement</kbd> 
  evaluates the consequent, otherwise it evaluates the alternative:

  <div class="snippet" id="javascript_74_3_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('function evaluate_if_statement(stmt,env) {\n   if (is_true(evaluate(if_predicate(stmt),env)))\n      return evaluate(if_consequent(stmt),env);\n   else return evaluate(if_alternative(stmt),env);\n}','javascript_74_3','', event,1.0);window.eval('function is_true(x){return !is_false(x)}function is_false(x){return x===false||x===0||x===&quot;&quot;||x===undefined||x===NaN};');">function evaluate_if_statement(stmt,env) {
   if (is_true(evaluate(if_predicate(stmt),env)))
      return evaluate(if_consequent(stmt),env);
   else return evaluate(if_alternative(stmt),env);
}</pre>
<a href="http://source-ide-new.surge.sh/?snippet=function%20evaluate_if_statement(stmt,env)%20%7B%0A%20%20%20if%20(is_true(evaluate(if_predicate(stmt),env)))%0A%20%20%20%20%20%20return%20evaluate(if_consequent(stmt),env);%0A%20%20%20else%20return%20evaluate(if_alternative(stmt),env);%0A%7D&amp;hidden=function%20is_true(x)%7Breturn%20!is_false(x)%7Dfunction%20is_false(x)%7Breturn%20x===false%7C%7Cx===0%7C%7Cx===%22%22%7C%7Cx===undefined%7C%7Cx===NaN%7D;" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
  
  The use of 
  <kbd>is_true</kbd>
  in 
  <kbd>evaluate_if_statement</kbd>
  highlights the issue of the
  connection between an implemented language and an implementation
  language.  The 
  <kbd>if_predicate</kbd>
  is evaluated in the language being
  implemented and thus yields a value in that language.  The interpreter
  predicate 
  <kbd>is_true</kbd> 
  translates that value into a value that can be
  tested by the <kbd>if</kbd> in the implementation language: The
  metacircular representation of truth might not be the same as that of
  the underlying 
  JavaScript.<a class="superscript" id="footnote-link-2" href="74#footnote-2">[2]</a>
      </p>

      <h2>
  Sequences
      </h2>

      <SPLIT>
  
  
    <p>
      The function <kbd>evaluate_sequence</kbd>
      is used by  
      <kbd>evaluate</kbd>
      to evaluate a sequence of statements.
      Note that the evaluation of the first component
      of a sequence may yield a return value, in which
      case the rest of the statement is not evaluated.

      <div class="snippet" id="javascript_74_4_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('function evaluate_sequence(stmts,env) {\n   if (is_last_statement(stmts))  \n      return evaluate(first_statement(stmts),env);\n   else {\n      var first_stmt_value = \n          evaluate(first_statement(stmts),env);\n      if (is_return_value(first_stmt_value))\n          return first_stmt_value;\n      else return evaluate_sequence(\n                     rest_statements(stmts),env);\n   }\n}','javascript_74_4','', event,1.0);window.eval('');">function evaluate_sequence(stmts,env) {
   if (is_last_statement(stmts))  
      return evaluate(first_statement(stmts),env);
   else {
      var first_stmt_value = 
          evaluate(first_statement(stmts),env);
      if (is_return_value(first_stmt_value))
          return first_stmt_value;
      else return evaluate_sequence(
                     rest_statements(stmts),env);
   }
}</pre>
<a href="http://source-ide-new.surge.sh/?snippet=function%20evaluate_sequence(stmts,env)%20%7B%0A%20%20%20if%20(is_last_statement(stmts))%20%20%0A%20%20%20%20%20%20return%20evaluate(first_statement(stmts),env);%0A%20%20%20else%20%7B%0A%20%20%20%20%20%20var%20first_stmt_value%20=%20%0A%20%20%20%20%20%20%20%20%20%20evaluate(first_statement(stmts),env);%0A%20%20%20%20%20%20if%20(is_return_value(first_stmt_value))%0A%20%20%20%20%20%20%20%20%20%20return%20first_stmt_value;%0A%20%20%20%20%20%20else%20return%20evaluate_sequence(%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20rest_statements(stmts),env);%0A%20%20%20%7D%0A%7D&amp;hidden=" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
    </p>
  
      </SPLIT>

      <h2>
  Assignments and definitions
      </h2>

      <p>
  The following
  function
  handles assignments to variables.  It calls
  <kbd>evaluate</kbd>
  to find the value to be assigned and transmits the variable
  and the resulting value to 
<kbd>set_variable_value</kbd>
  to be installed  in the designated environment.

  <div class="snippet" id="javascript_74_5_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('function evaluate_assignment(stmt,env) {\n   var value = evaluate(assignment_value(stmt),env);\n   set_variable_value(assignment_variable(stmt),\n                      value,\n                      env);\n   return value;\n}','javascript_74_5','', event,1.0);window.eval('function enclosing_environment(env){return tail(env)}function first_frame(env){return head(env)}var the_empty_environment=[];var an_empty_frame={};function is_empty_environment(env){return is_empty_list(env)}function enclose_by(frame,env){return pair(frame,env)};function set_variable_value(variable,value,env){function env_loop(env){if(is_empty_environment(env)){error(&quot;Unbound variable - - assignment: &quot;,variable)}else{if(has_binding_in_frame(variable,first_frame(env))){add_binding_to_frame(variable,value,first_frame(env))}else{env_loop(enclosing_environment(env))}}}env_loop(env);return};');">function evaluate_assignment(stmt,env) {
   var value = evaluate(assignment_value(stmt),env);
   set_variable_value(assignment_variable(stmt),
                      value,
                      env);
   return value;
}</pre>
<a href="http://source-ide-new.surge.sh/?snippet=function%20evaluate_assignment(stmt,env)%20%7B%0A%20%20%20var%20value%20=%20evaluate(assignment_value(stmt),env);%0A%20%20%20set_variable_value(assignment_variable(stmt),%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20value,%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20env);%0A%20%20%20return%20value;%0A%7D&amp;hidden=function%20enclosing_environment(env)%7Breturn%20tail(env)%7Dfunction%20first_frame(env)%7Breturn%20head(env)%7Dvar%20the_empty_environment=%5B%5D;var%20an_empty_frame=%7B%7D;function%20is_empty_environment(env)%7Breturn%20is_empty_list(env)%7Dfunction%20enclose_by(frame,env)%7Breturn%20pair(frame,env)%7D;function%20set_variable_value(variable,value,env)%7Bfunction%20env_loop(env)%7Bif(is_empty_environment(env))%7Berror(%22Unbound%20variable%20-%20-%20assignment:%20%22,variable)%7Delse%7Bif(has_binding_in_frame(variable,first_frame(env)))%7Badd_binding_to_frame(variable,value,first_frame(env))%7Delse%7Benv_loop(enclosing_environment(env))%7D%7D%7Denv_loop(env);return%7D;" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <p>
  Definitions of variables are handled in a similar
  manner.<a class="superscript" id="footnote-link-3" href="74#footnote-3">[3]</a>

  <div class="snippet" id="javascript_74_6_div"></div><div class="pre-prettyprint">
<pre class="prettyprint" title="Evaluate Javascript expression" onclick="new window.JavascriptConsole('function evaluate_var_definition(stmt,env) {\n   define_variable(var_definition_variable(stmt),\n      evaluate(var_definition_value(stmt),env),\n      env);\n   return undefined;\n}','javascript_74_6','', event,1.0);window.eval('function make_frame(variables,values){if(is_empty_list(variables)&amp;&amp;is_empty_list(values)){return{}}else{var frame=make_frame(tail(variables),tail(values));frame[head(variables)]=head(values);return frame}}function add_binding_to_frame(variable,value,frame){frame[variable]=value;return}function has_binding_in_frame(variable,frame){return frame.hasOwnProperty(variable)};function define_variable(variable,value,env){var frame=first_frame(env);return add_binding_to_frame(variable,value,frame)};');">function evaluate_var_definition(stmt,env) {
   define_variable(var_definition_variable(stmt),
      evaluate(var_definition_value(stmt),env),
      env);
   return undefined;
}</pre>
<a href="http://source-ide-new.surge.sh/?snippet=function%20evaluate_var_definition(stmt,env)%20%7B%0A%20%20%20define_variable(var_definition_variable(stmt),%0A%20%20%20%20%20%20evaluate(var_definition_value(stmt),env),%0A%20%20%20%20%20%20env);%0A%20%20%20return%20undefined;%0A%7D&amp;hidden=function%20make_frame(variables,values)%7Bif(is_empty_list(variables)&amp;amp;&amp;amp;is_empty_list(values))%7Breturn%7B%7D%7Delse%7Bvar%20frame=make_frame(tail(variables),tail(values));frame%5Bhead(variables)%5D=head(values);return%20frame%7D%7Dfunction%20add_binding_to_frame(variable,value,frame)%7Bframe%5Bvariable%5D=value;return%7Dfunction%20has_binding_in_frame(variable,frame)%7Breturn%20frame.hasOwnProperty(variable)%7D;function%20define_variable(variable,value,env)%7Bvar%20frame=first_frame(env);return%20add_binding_to_frame(variable,value,frame)%7D;" class="snippet-ide-link btn btn-primary">[Open in IDE]</a>
</div>
      </p>

      <SPLIT>
  
  <JAVASCRIP>
    <p>
      Note that the returned value of the <kbd>var</kbd>
      definition is the value <kbd>undefined</kbd>, as
      prescribed by the ECMAScript standard (<CITATION>Ecma 1997</CITATION>).
      
    </p>
  </JAVASCRIP>
      </SPLIT>

      <EXERCISE>
  
  
  Notice that we cannot tell whether the metacircular evaluator
  evaluates operands from left to right or from right to left.  Its evaluation
  order is inherited from the underlying JavaScript:
  If the arguments to <kbd>pair</kbd> in <kbd>list-of-values</kbd>
  are evaluated from left to right, then <kbd>list-of-values</kbd> will
  evaluate operands from left to right; and 
  if the arguments to <kbd>pair</kbd>
  are evaluated from right to left, then <kbd>list-of-values</kbd> will
  evaluate operands from right to left.

  Write a version of <kbd>list-of-values</kbd> that evaluates operands
  from left to right regardless of the order of evaluation in the underlying
  JavaScript.  Also write a version of <kbd>list-of-values</kbd> that evaluates operands
  from right to left.
  
      </EXERCISE>
    <hr>
<div class="footnote">
<a class="footnote-number" id="footnote-1" href="74#footnote-link-1">[1] </a><FOOTNOTE>We could have simplified the 
  
  <kbd>is_application</kbd>
    clause in 
    <kbd>evaluate</kbd>
    by using <kbd>map</kbd>
    (and stipulating that <kbd>operands</kbd> returns a list) rather than
    writing an explicit 
    
    <kbd>list_of_values</kbd>
    function.  We chose not to
    use <kbd>map</kbd> here to emphasize the fact that the 
    
    
    evaluator can be implemented without any use of higher-order
    functions
    (and thus could be written in a language that doesn't have
    higher-order
    functions), 
    even though the language that it supports will include higher-order
    functions.
    </FOOTNOTE>
</div>
<div class="footnote">
<a class="footnote-number" id="footnote-2" href="74#footnote-link-2">[2] </a><FOOTNOTE>In this case, the language being implemented and the
    implementation language are the same.  Contemplation of the meaning of
    
    
    <kbd>is_true</kbd>
    here yields expansion of consciousness without the abuse
    of substance.</FOOTNOTE>
</div>
<div class="footnote">
<a class="footnote-number" id="footnote-3" href="74#footnote-link-3">[3] </a><FOOTNOTE>This implementation of <kbd>define</kbd> ignores a subtle
    issue in the handling of internal definitions, although it works
    correctly in most cases.  We will see what the problem is and how to
    solve it in Section <REF NAME="sec:internal-definitions"></REF>.</FOOTNOTE>
</div></SUBSECTION></div>
    </div>

    <div class="nav">
    <!--
      <div type="button" class="btn btn-secondary">
        <a href="http://localhost:3000/chapters/73">&lt; Previous</a>
    </div>
    -->
      <div type="button" class="btn btn-secondary">
        <a class="scroll-next" href="75">Next &gt;</a>
      </div>


  </div>
  <script>
//<![CDATA[
var chapter_id = 74;
//]]>
</script>
  <div class="next-page"></div>
</div>

     </div><!-- /.container -->

     <!--<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js" integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn" crossorigin="anonymous"></script>
     -->
   </body>
</html>
